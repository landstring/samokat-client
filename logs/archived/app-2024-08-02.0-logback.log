2024-08-02 21:11:32,317 INFO [main] org.springframework.boot.StartupInfoLogger: Starting SamokatClientApplication using Java 22 with PID 8068 (C:\Users\arikb\Desktop\samokat-client\target\classes started by arikb in C:\Users\arikb\Desktop\samokat-client)
2024-08-02 21:11:32,319 DEBUG [main] org.springframework.boot.StartupInfoLogger: Running with Spring Boot v3.3.1, Spring v6.1.10
2024-08-02 21:11:32,320 INFO [main] org.springframework.boot.SpringApplication: No active profile set, falling back to 1 default profile: "default"
2024-08-02 21:11:32,936 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02 21:11:32,937 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-02 21:11:32,952 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2024-08-02 21:11:33,306 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02 21:11:33,307 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-02 21:11:33,408 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.samokatclient.repositories.user.AddressRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-02 21:11:33,409 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.samokatclient.repositories.user.OrderRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-02 21:11:33,411 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.samokatclient.repositories.user.PaymentRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-02 21:11:33,428 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Finished Spring Data repository scanning in 118 ms. Found 3 JPA repository interfaces.
2024-08-02 21:11:33,435 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02 21:11:33,435 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-02 21:11:33,442 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.samokatclient.repositories.product.CategoryRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-02 21:11:33,442 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.samokatclient.repositories.product.ProductRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-02 21:11:33,444 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.samokatclient.repositories.user.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-02 21:11:33,449 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Finished Spring Data repository scanning in 13 ms. Found 3 MongoDB repository interfaces.
2024-08-02 21:11:33,453 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02 21:11:33,453 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-02 21:11:33,459 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.samokatclient.repositories.product.CategoryRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02 21:11:33,459 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.samokatclient.repositories.product.ProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02 21:11:33,459 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.samokatclient.repositories.user.AddressRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02 21:11:33,459 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.samokatclient.repositories.user.OrderRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02 21:11:33,459 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.samokatclient.repositories.user.PaymentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02 21:11:33,460 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.samokatclient.repositories.user.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02 21:11:33,460 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Finished Spring Data repository scanning in 7 ms. Found 0 Redis repository interfaces.
2024-08-02 21:11:34,103 INFO [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer: Tomcat initialized with port 8080 (http)
2024-08-02 21:11:34,111 INFO [main] org.apache.juli.logging.DirectJDKLog: Initializing ProtocolHandler ["http-nio-8080"]
2024-08-02 21:11:34,113 INFO [main] org.apache.juli.logging.DirectJDKLog: Starting service [Tomcat]
2024-08-02 21:11:34,113 INFO [main] org.apache.juli.logging.DirectJDKLog: Starting Servlet engine: [Apache Tomcat/10.1.25]
2024-08-02 21:11:34,166 INFO [main] org.apache.juli.logging.DirectJDKLog: Initializing Spring embedded WebApplicationContext
2024-08-02 21:11:34,166 INFO [main] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext: Root WebApplicationContext: initialization completed in 1810 ms
2024-08-02 21:11:34,420 INFO [main] org.hibernate.jpa.internal.util.LogHelper: HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-02 21:11:34,462 INFO [main] org.hibernate.Version: HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-02 21:11:34,488 INFO [main] org.hibernate.cache.internal.RegionFactoryInitiator: HHH000026: Second-level cache disabled
2024-08-02 21:11:34,718 INFO [main] org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo: No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-02 21:11:34,738 INFO [main] com.zaxxer.hikari.HikariDataSource: HikariPool-1 - Starting...
2024-08-02 21:11:34,847 INFO [main] com.zaxxer.hikari.pool.HikariPool: HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@56d6e2e1
2024-08-02 21:11:34,848 INFO [main] com.zaxxer.hikari.HikariDataSource: HikariPool-1 - Start completed.
2024-08-02 21:11:34,878 WARN [main] org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl: HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-08-02 21:11:35,669 INFO [main] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator: HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-02 21:11:35,758 INFO [main] org.springframework.orm.jpa.AbstractEntityManagerFactoryBean: Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-02 21:11:36,207 INFO [main] org.springframework.data.jpa.repository.query.QueryEnhancerFactory: Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-02 21:11:36,473 INFO [main] com.mongodb.internal.diagnostics.logging.SLF4JLogger: MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/22+36-2370"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='root', source='admin', password=<hidden>, mechanismProperties=<hidden>}, transportSettings=null, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@29483d10], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@6725f9e0, com.mongodb.Jep395RecordCodecProvider@6121b045, com.mongodb.KotlinCodecProvider@4b8ab2f8]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@2acb6c9a], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-02 21:11:36,487 INFO [cluster-ClusterId{value='66ad134845c3a5508e0f281b', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=23986200}
2024-08-02 21:11:37,020 WARN [main] org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration: spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-02 21:11:37,751 INFO [main] org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver: Exposing 1 endpoint beneath base path '/actuator'
2024-08-02 21:11:37,863 INFO [main] org.apache.kafka.common.config.AbstractConfig: AdminClientConfig values: 
	auto.include.jmx.reporter = true
	bootstrap.controllers = []
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	enable.metrics.push = true
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2024-08-02 21:11:37,914 INFO [main] org.apache.kafka.common.utils.AppInfoParser$AppInfo: Kafka version: 3.7.0
2024-08-02 21:11:37,914 INFO [main] org.apache.kafka.common.utils.AppInfoParser$AppInfo: Kafka commitId: 2ae524ed625438c5
2024-08-02 21:11:37,914 INFO [main] org.apache.kafka.common.utils.AppInfoParser$AppInfo: Kafka startTimeMs: 1722618697913
2024-08-02 21:11:38,267 INFO [kafka-admin-client-thread | adminclient-1] org.apache.kafka.common.utils.AppInfoParser: App info kafka.admin.client for adminclient-1 unregistered
2024-08-02 21:11:38,271 INFO [kafka-admin-client-thread | adminclient-1] org.apache.kafka.common.metrics.Metrics: Metrics scheduler closed
2024-08-02 21:11:38,272 INFO [kafka-admin-client-thread | adminclient-1] org.apache.kafka.common.metrics.Metrics: Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-08-02 21:11:38,272 INFO [kafka-admin-client-thread | adminclient-1] org.apache.kafka.common.metrics.Metrics: Metrics reporters closed
2024-08-02 21:11:38,275 INFO [main] org.apache.juli.logging.DirectJDKLog: Starting ProtocolHandler ["http-nio-8080"]
2024-08-02 21:11:38,283 INFO [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer: Tomcat started on port 8080 (http) with context path '/'
2024-08-02 21:11:38,355 INFO [main] org.apache.kafka.common.config.AbstractConfig: ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-newStatusGroupId-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = newStatusGroupId
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.JsonDeserializer

2024-08-02 21:11:38,386 INFO [main] org.apache.kafka.common.telemetry.internals.KafkaMetricsCollector$StateLedger: initializing Kafka metrics collector
2024-08-02 21:11:38,424 INFO [main] org.apache.kafka.common.config.AbstractConfig: These configurations '[spring.json.trusted.packages, spring.json.value.default.type, spring.json.use.type.headers]' were supplied but are not used yet.
2024-08-02 21:11:38,425 INFO [main] org.apache.kafka.common.utils.AppInfoParser$AppInfo: Kafka version: 3.7.0
2024-08-02 21:11:38,427 INFO [main] org.apache.kafka.common.utils.AppInfoParser$AppInfo: Kafka commitId: 2ae524ed625438c5
2024-08-02 21:11:38,428 INFO [main] org.apache.kafka.common.utils.AppInfoParser$AppInfo: Kafka startTimeMs: 1722618698425
2024-08-02 21:11:38,430 INFO [main] org.apache.kafka.clients.consumer.internals.LegacyKafkaConsumer: [Consumer clientId=consumer-newStatusGroupId-1, groupId=newStatusGroupId] Subscribed to topic(s): newStatus
2024-08-02 21:11:38,448 INFO [main] org.springframework.boot.StartupInfoLogger: Started SamokatClientApplication in 6.501 seconds (process running for 7.221)
2024-08-02 21:11:38,451 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata: [Consumer clientId=consumer-newStatusGroupId-1, groupId=newStatusGroupId] Cluster ID: ro5ZC2MwSFGcpo-n9miWSA
2024-08-02 21:11:38,451 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.AbstractCoordinator$FindCoordinatorResponseHandler: [Consumer clientId=consumer-newStatusGroupId-1, groupId=newStatusGroupId] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2024-08-02 21:11:38,455 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.AbstractCoordinator: [Consumer clientId=consumer-newStatusGroupId-1, groupId=newStatusGroupId] (Re-)joining group
2024-08-02 21:11:38,468 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.AbstractCoordinator: [Consumer clientId=consumer-newStatusGroupId-1, groupId=newStatusGroupId] Request joining group due to: need to re-join with the given member-id: consumer-newStatusGroupId-1-be169085-fe45-417a-8aff-785cab05cb97
2024-08-02 21:11:38,469 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.AbstractCoordinator: [Consumer clientId=consumer-newStatusGroupId-1, groupId=newStatusGroupId] (Re-)joining group
2024-08-02 21:11:38,993 INFO [RMI TCP Connection(3)-192.168.0.107] org.apache.juli.logging.DirectJDKLog: Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-02 21:11:38,993 INFO [RMI TCP Connection(3)-192.168.0.107] org.springframework.web.servlet.FrameworkServlet: Initializing Servlet 'dispatcherServlet'
2024-08-02 21:11:38,994 INFO [RMI TCP Connection(3)-192.168.0.107] org.springframework.web.servlet.FrameworkServlet: Completed initialization in 1 ms
2024-08-02 21:11:40,413 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.AbstractCoordinator$JoinGroupResponseHandler: [Consumer clientId=consumer-newStatusGroupId-1, groupId=newStatusGroupId] Successfully joined group with generation Generation{generationId=2, memberId='consumer-newStatusGroupId-1-be169085-fe45-417a-8aff-785cab05cb97', protocol='range'}
2024-08-02 21:11:40,419 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.AbstractCoordinator$SyncGroupResponseHandler: [Consumer clientId=consumer-newStatusGroupId-1, groupId=newStatusGroupId] Successfully synced group in generation Generation{generationId=2, memberId='consumer-newStatusGroupId-1-be169085-fe45-417a-8aff-785cab05cb97', protocol='range'}
2024-08-02 21:11:40,421 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator: [Consumer clientId=consumer-newStatusGroupId-1, groupId=newStatusGroupId] Notifying assignor about the new Assignment(partitions=[newStatus-0])
2024-08-02 21:11:40,423 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerRebalanceListenerInvoker: [Consumer clientId=consumer-newStatusGroupId-1, groupId=newStatusGroupId] Adding newly assigned partitions: newStatus-0
2024-08-02 21:11:40,432 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerUtils: Setting offset for partition newStatus-0 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}
2024-08-02 21:11:40,434 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: newStatusGroupId: partitions assigned: [newStatus-0]
2024-08-02 21:11:43,698 INFO [http-nio-8080-exec-4] org.springdoc.api.AbstractOpenApiResource: Init duration for springdoc-openapi is: 349 ms
2024-08-02 21:11:58,154 INFO [http-nio-8080-exec-5] com.example.samokatclient.controllers.SessionController: Создание сессии
2024-08-02 21:11:58,155 INFO [http-nio-8080-exec-5] com.example.samokatclient.repositories.session.SessionRepository: Redis hasKey HASH_KEY: Session, key: 16f5d256-9c51-480d-bd50-4b5853df9b52
2024-08-02 21:11:58,161 INFO [http-nio-8080-exec-5] com.example.samokatclient.repositories.session.SessionRepository: Redis get HASH_KEY: Session, key: 16f5d256-9c51-480d-bd50-4b5853df9b52, value {"id":"16f5d256-9c51-480d-bd50-4b5853df9b52","user":null,"cart":{"products":{}},"address":null,"payment":null}
2024-08-02 21:12:41,830 INFO [http-nio-8080-exec-7] com.example.samokatclient.repositories.session.SessionRepository: Redis get HASH_KEY: Session, key: 16f5d256-9c51-480d-bd50-4b5853df9b52
2024-08-02 21:12:41,892 INFO [http-nio-8080-exec-7] com.example.samokatclient.repositories.session.SessionRepository: Redis get HASH_KEY: Session, key: 16f5d256-9c51-480d-bd50-4b5853df9b52, value {"id":"16f5d256-9c51-480d-bd50-4b5853df9b52","user":{"id":"+7 (927) 623-93-03","name":""},"cart":{"products":{}},"address":null,"payment":null}
2024-08-02 21:13:02,933 INFO [http-nio-8080-exec-1] com.example.samokatclient.repositories.session.SessionRepository: Redis get HASH_KEY: Session, key: 16f5d256-9c51-480d-bd50-4b5853df9b52
2024-08-02 21:13:21,626 INFO [http-nio-8080-exec-2] com.example.samokatclient.repositories.session.SessionRepository: Redis get HASH_KEY: Session, key: 16f5d256-9c51-480d-bd50-4b5853df9b52
2024-08-02 21:13:21,643 INFO [http-nio-8080-exec-2] com.example.samokatclient.repositories.session.SessionRepository: Redis get HASH_KEY: Session, key: 16f5d256-9c51-480d-bd50-4b5853df9b52, value {"id":"16f5d256-9c51-480d-bd50-4b5853df9b52","user":{"id":"+7 (927) 623-93-03","name":""},"cart":{"products":{}},"address":null,"payment":{"id":"5e426560-4c0a-4f81-a823-6264c96065d7","cardNumber":"1234 1234 1234 1234","expirationDate":"05/32","cvc":123,"userId":"+7 (927) 623-93-03"}}
2024-08-02 21:13:30,697 INFO [http-nio-8080-exec-5] com.example.samokatclient.repositories.session.SessionRepository: Redis get HASH_KEY: Session, key: 16f5d256-9c51-480d-bd50-4b5853df9b52
2024-08-02 21:13:43,469 INFO [http-nio-8080-exec-7] com.example.samokatclient.repositories.session.SessionRepository: Redis get HASH_KEY: Session, key: 16f5d256-9c51-480d-bd50-4b5853df9b52
2024-08-02 21:13:43,483 INFO [http-nio-8080-exec-7] com.example.samokatclient.repositories.session.SessionRepository: Redis get HASH_KEY: Session, key: 16f5d256-9c51-480d-bd50-4b5853df9b52, value {"id":"16f5d256-9c51-480d-bd50-4b5853df9b52","user":{"id":"+7 (927) 623-93-03","name":""},"cart":{"products":{}},"address":{"id":"c4ee3de6-da62-4e6e-8052-c147b2b86f92","city":"Саратов","home":"Ул. им. Орджоникидзе Г.К., д. 13","apartment":"119","entrance":"3","plate":7,"userId":"+7 (927) 623-93-03"},"payment":{"id":"5e426560-4c0a-4f81-a823-6264c96065d7","cardNumber":"1234 1234 1234 1234","expirationDate":"05/32","cvc":123,"userId":"+7 (927) 623-93-03"}}
2024-08-02 21:14:17,753 INFO [http-nio-8080-exec-10] com.example.samokatclient.repositories.session.SessionRepository: Redis get HASH_KEY: Session, key: 16f5d256-9c51-480d-bd50-4b5853df9b52
2024-08-02 21:14:27,868 INFO [http-nio-8080-exec-3] com.example.samokatclient.repositories.session.SessionRepository: Redis get HASH_KEY: Session, key: 16f5d256-9c51-480d-bd50-4b5853df9b52
2024-08-02 21:14:27,934 ERROR [http-nio-8080-exec-3] org.apache.juli.logging.DirectJDKLog: Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.reflect.UndeclaredThrowableException] with root cause
com.fasterxml.jackson.core.exc.StreamConstraintsException: Document nesting depth (1001) exceeds the maximum allowed (1000, from `StreamWriteConstraints.getMaxNestingDepth()`)
	at com.fasterxml.jackson.core.StreamWriteConstraints._constructException(StreamWriteConstraints.java:177)
	at com.fasterxml.jackson.core.StreamWriteConstraints.validateNestingDepth(StreamWriteConstraints.java:162)
	at com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeStartArray(WriterBasedJsonGenerator.java:286)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:106)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:183)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
2024-08-02 21:16:04,338 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerRebalanceListenerInvoker: [Consumer clientId=consumer-newStatusGroupId-1, groupId=newStatusGroupId] Revoke previously assigned partitions newStatus-0
2024-08-02 21:16:04,339 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: newStatusGroupId: partitions revoked: [newStatus-0]
2024-08-02 21:16:04,339 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.AbstractCoordinator: [Consumer clientId=consumer-newStatusGroupId-1, groupId=newStatusGroupId] Member consumer-newStatusGroupId-1-be169085-fe45-417a-8aff-785cab05cb97 sending LeaveGroup request to coordinator localhost:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics
2024-08-02 21:16:04,340 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.AbstractCoordinator: [Consumer clientId=consumer-newStatusGroupId-1, groupId=newStatusGroupId] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-08-02 21:16:04,340 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.AbstractCoordinator: [Consumer clientId=consumer-newStatusGroupId-1, groupId=newStatusGroupId] Request joining group due to: consumer pro-actively leaving the group
2024-08-02 21:16:04,340 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.LegacyKafkaConsumer: [Consumer clientId=consumer-newStatusGroupId-1, groupId=newStatusGroupId] Unsubscribed all topics or patterns and assigned partitions
2024-08-02 21:16:04,341 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.AbstractCoordinator: [Consumer clientId=consumer-newStatusGroupId-1, groupId=newStatusGroupId] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-08-02 21:16:04,342 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.AbstractCoordinator: [Consumer clientId=consumer-newStatusGroupId-1, groupId=newStatusGroupId] Request joining group due to: consumer pro-actively leaving the group
2024-08-02 21:16:04,487 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics: Metrics scheduler closed
2024-08-02 21:16:04,487 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics: Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-08-02 21:16:04,487 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics: Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2024-08-02 21:16:04,488 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics: Metrics reporters closed
2024-08-02 21:16:04,491 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.utils.AppInfoParser: App info kafka.consumer for consumer-newStatusGroupId-1 unregistered
2024-08-02 21:16:04,492 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: newStatusGroupId: Consumer stopped
2024-08-02 21:16:04,651 INFO [SpringApplicationShutdownHook] org.springframework.orm.jpa.AbstractEntityManagerFactoryBean: Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-02 21:16:04,653 INFO [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource: HikariPool-1 - Shutdown initiated...
2024-08-02 21:16:04,658 INFO [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource: HikariPool-1 - Shutdown completed.
2024-08-02 21:17:11,997 INFO [main] org.springframework.boot.StartupInfoLogger: Starting SamokatClientApplication using Java 22 with PID 20056 (C:\Users\arikb\Desktop\samokat-client\target\classes started by arikb in C:\Users\arikb\Desktop\samokat-client)
2024-08-02 21:17:11,998 DEBUG [main] org.springframework.boot.StartupInfoLogger: Running with Spring Boot v3.3.1, Spring v6.1.10
2024-08-02 21:17:11,999 INFO [main] org.springframework.boot.SpringApplication: No active profile set, falling back to 1 default profile: "default"
2024-08-02 21:17:12,858 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02 21:17:12,859 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-02 21:17:12,890 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Finished Spring Data repository scanning in 9 ms. Found 0 Redis repository interfaces.
2024-08-02 21:17:13,459 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02 21:17:13,460 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-02 21:17:13,595 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.samokatclient.repositories.user.AddressRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-02 21:17:13,597 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.samokatclient.repositories.user.OrderRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-02 21:17:13,600 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.samokatclient.repositories.user.PaymentRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-02 21:17:13,624 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Finished Spring Data repository scanning in 161 ms. Found 3 JPA repository interfaces.
2024-08-02 21:17:13,636 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02 21:17:13,636 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-02 21:17:13,643 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.samokatclient.repositories.product.CategoryRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-02 21:17:13,644 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.samokatclient.repositories.product.ProductRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-02 21:17:13,647 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.samokatclient.repositories.user.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-02 21:17:13,655 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Finished Spring Data repository scanning in 18 ms. Found 3 MongoDB repository interfaces.
2024-08-02 21:17:13,660 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02 21:17:13,661 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-02 21:17:13,668 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.samokatclient.repositories.product.CategoryRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02 21:17:13,668 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.samokatclient.repositories.product.ProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02 21:17:13,668 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.samokatclient.repositories.user.AddressRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02 21:17:13,668 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.samokatclient.repositories.user.OrderRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02 21:17:13,669 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.samokatclient.repositories.user.PaymentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02 21:17:13,669 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.samokatclient.repositories.user.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02 21:17:13,669 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Finished Spring Data repository scanning in 8 ms. Found 0 Redis repository interfaces.
2024-08-02 21:17:14,472 INFO [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer: Tomcat initialized with port 8080 (http)
2024-08-02 21:17:14,481 INFO [main] org.apache.juli.logging.DirectJDKLog: Initializing ProtocolHandler ["http-nio-8080"]
2024-08-02 21:17:14,483 INFO [main] org.apache.juli.logging.DirectJDKLog: Starting service [Tomcat]
2024-08-02 21:17:14,483 INFO [main] org.apache.juli.logging.DirectJDKLog: Starting Servlet engine: [Apache Tomcat/10.1.25]
2024-08-02 21:17:14,537 INFO [main] org.apache.juli.logging.DirectJDKLog: Initializing Spring embedded WebApplicationContext
2024-08-02 21:17:14,537 INFO [main] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext: Root WebApplicationContext: initialization completed in 2495 ms
2024-08-02 21:17:14,826 INFO [main] org.hibernate.jpa.internal.util.LogHelper: HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-02 21:17:14,872 INFO [main] org.hibernate.Version: HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-02 21:17:14,897 INFO [main] org.hibernate.cache.internal.RegionFactoryInitiator: HHH000026: Second-level cache disabled
2024-08-02 21:17:15,146 INFO [main] org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo: No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-02 21:17:15,166 INFO [main] com.zaxxer.hikari.HikariDataSource: HikariPool-1 - Starting...
2024-08-02 21:17:15,274 INFO [main] com.zaxxer.hikari.pool.HikariPool: HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@77925f76
2024-08-02 21:17:15,275 INFO [main] com.zaxxer.hikari.HikariDataSource: HikariPool-1 - Start completed.
2024-08-02 21:17:15,299 WARN [main] org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl: HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-08-02 21:17:16,047 INFO [main] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator: HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-02 21:17:16,131 INFO [main] org.springframework.orm.jpa.AbstractEntityManagerFactoryBean: Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-02 21:17:16,569 INFO [main] org.springframework.data.jpa.repository.query.QueryEnhancerFactory: Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-02 21:17:16,850 INFO [main] com.mongodb.internal.diagnostics.logging.SLF4JLogger: MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/22+36-2370"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='root', source='admin', password=<hidden>, mechanismProperties=<hidden>}, transportSettings=null, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@75ee63f2], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@ce24a98, com.mongodb.Jep395RecordCodecProvider@496101d1, com.mongodb.KotlinCodecProvider@19858f26]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@303d2485], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-02 21:17:16,861 INFO [cluster-ClusterId{value='66ad149c3a7db2027590b28b', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=23669100}
2024-08-02 21:17:17,441 WARN [main] org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration: spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-02 21:17:18,399 INFO [main] org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver: Exposing 1 endpoint beneath base path '/actuator'
2024-08-02 21:17:18,510 INFO [main] org.apache.kafka.common.config.AbstractConfig: AdminClientConfig values: 
	auto.include.jmx.reporter = true
	bootstrap.controllers = []
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	enable.metrics.push = true
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2024-08-02 21:17:18,567 INFO [main] org.apache.kafka.common.utils.AppInfoParser$AppInfo: Kafka version: 3.7.0
2024-08-02 21:17:18,568 INFO [main] org.apache.kafka.common.utils.AppInfoParser$AppInfo: Kafka commitId: 2ae524ed625438c5
2024-08-02 21:17:18,568 INFO [main] org.apache.kafka.common.utils.AppInfoParser$AppInfo: Kafka startTimeMs: 1722619038566
2024-08-02 21:17:18,907 INFO [kafka-admin-client-thread | adminclient-1] org.apache.kafka.common.utils.AppInfoParser: App info kafka.admin.client for adminclient-1 unregistered
2024-08-02 21:17:18,912 INFO [kafka-admin-client-thread | adminclient-1] org.apache.kafka.common.metrics.Metrics: Metrics scheduler closed
2024-08-02 21:17:18,912 INFO [kafka-admin-client-thread | adminclient-1] org.apache.kafka.common.metrics.Metrics: Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-08-02 21:17:18,913 INFO [kafka-admin-client-thread | adminclient-1] org.apache.kafka.common.metrics.Metrics: Metrics reporters closed
2024-08-02 21:17:18,917 INFO [main] org.apache.juli.logging.DirectJDKLog: Starting ProtocolHandler ["http-nio-8080"]
2024-08-02 21:17:18,925 INFO [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer: Tomcat started on port 8080 (http) with context path '/'
2024-08-02 21:17:18,996 INFO [main] org.apache.kafka.common.config.AbstractConfig: ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-newStatusGroupId-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = newStatusGroupId
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.JsonDeserializer

2024-08-02 21:17:19,028 INFO [main] org.apache.kafka.common.telemetry.internals.KafkaMetricsCollector$StateLedger: initializing Kafka metrics collector
2024-08-02 21:17:19,066 INFO [main] org.apache.kafka.common.config.AbstractConfig: These configurations '[spring.json.trusted.packages, spring.json.value.default.type, spring.json.use.type.headers]' were supplied but are not used yet.
2024-08-02 21:17:19,067 INFO [main] org.apache.kafka.common.utils.AppInfoParser$AppInfo: Kafka version: 3.7.0
2024-08-02 21:17:19,067 INFO [main] org.apache.kafka.common.utils.AppInfoParser$AppInfo: Kafka commitId: 2ae524ed625438c5
2024-08-02 21:17:19,067 INFO [main] org.apache.kafka.common.utils.AppInfoParser$AppInfo: Kafka startTimeMs: 1722619039067
2024-08-02 21:17:19,071 INFO [main] org.apache.kafka.clients.consumer.internals.LegacyKafkaConsumer: [Consumer clientId=consumer-newStatusGroupId-1, groupId=newStatusGroupId] Subscribed to topic(s): newStatus
2024-08-02 21:17:19,098 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata: [Consumer clientId=consumer-newStatusGroupId-1, groupId=newStatusGroupId] Cluster ID: ro5ZC2MwSFGcpo-n9miWSA
2024-08-02 21:17:19,098 INFO [main] org.springframework.boot.StartupInfoLogger: Started SamokatClientApplication in 7.448 seconds (process running for 8.144)
2024-08-02 21:17:19,098 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.AbstractCoordinator$FindCoordinatorResponseHandler: [Consumer clientId=consumer-newStatusGroupId-1, groupId=newStatusGroupId] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2024-08-02 21:17:19,103 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.AbstractCoordinator: [Consumer clientId=consumer-newStatusGroupId-1, groupId=newStatusGroupId] (Re-)joining group
2024-08-02 21:17:19,122 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.AbstractCoordinator: [Consumer clientId=consumer-newStatusGroupId-1, groupId=newStatusGroupId] Request joining group due to: need to re-join with the given member-id: consumer-newStatusGroupId-1-cf7ca777-3773-4685-a87a-d8f00301dc3f
2024-08-02 21:17:19,122 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.AbstractCoordinator: [Consumer clientId=consumer-newStatusGroupId-1, groupId=newStatusGroupId] (Re-)joining group
2024-08-02 21:17:19,290 INFO [RMI TCP Connection(2)-192.168.0.107] org.apache.juli.logging.DirectJDKLog: Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-02 21:17:19,290 INFO [RMI TCP Connection(2)-192.168.0.107] org.springframework.web.servlet.FrameworkServlet: Initializing Servlet 'dispatcherServlet'
2024-08-02 21:17:19,292 INFO [RMI TCP Connection(2)-192.168.0.107] org.springframework.web.servlet.FrameworkServlet: Completed initialization in 2 ms
2024-08-02 21:17:20,244 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.AbstractCoordinator$JoinGroupResponseHandler: [Consumer clientId=consumer-newStatusGroupId-1, groupId=newStatusGroupId] Successfully joined group with generation Generation{generationId=4, memberId='consumer-newStatusGroupId-1-cf7ca777-3773-4685-a87a-d8f00301dc3f', protocol='range'}
2024-08-02 21:17:20,248 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.AbstractCoordinator$SyncGroupResponseHandler: [Consumer clientId=consumer-newStatusGroupId-1, groupId=newStatusGroupId] Successfully synced group in generation Generation{generationId=4, memberId='consumer-newStatusGroupId-1-cf7ca777-3773-4685-a87a-d8f00301dc3f', protocol='range'}
2024-08-02 21:17:20,250 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator: [Consumer clientId=consumer-newStatusGroupId-1, groupId=newStatusGroupId] Notifying assignor about the new Assignment(partitions=[newStatus-0])
2024-08-02 21:17:20,252 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerRebalanceListenerInvoker: [Consumer clientId=consumer-newStatusGroupId-1, groupId=newStatusGroupId] Adding newly assigned partitions: newStatus-0
2024-08-02 21:17:20,262 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerUtils: Setting offset for partition newStatus-0 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}
2024-08-02 21:17:20,263 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: newStatusGroupId: partitions assigned: [newStatus-0]
2024-08-02 21:17:26,542 INFO [http-nio-8080-exec-5] org.springdoc.api.AbstractOpenApiResource: Init duration for springdoc-openapi is: 315 ms
2024-08-02 21:17:35,609 INFO [http-nio-8080-exec-3] com.example.samokatclient.repositories.session.SessionRepository: Redis get HASH_KEY: Session, key: 16f5d256-9c51-480d-bd50-4b5853df9b52
2024-08-02 21:17:55,540 INFO [http-nio-8080-exec-7] com.example.samokatclient.repositories.session.SessionRepository: Redis get HASH_KEY: Session, key: 16f5d256-9c51-480d-bd50-4b5853df9b52
2024-08-02 21:18:27,576 INFO [http-nio-8080-exec-10] com.example.samokatclient.repositories.session.SessionRepository: Redis get HASH_KEY: Session, key: 16f5d256-9c51-480d-bd50-4b5853df9b52
2024-08-02 21:18:27,647 INFO [http-nio-8080-exec-10] com.example.samokatclient.repositories.session.SessionRepository: Redis get HASH_KEY: Session, key: 16f5d256-9c51-480d-bd50-4b5853df9b52, value com.example.samokatclient.entities.session.Session@4df11b69
2024-08-02 21:18:30,154 INFO [http-nio-8080-exec-1] com.example.samokatclient.repositories.session.SessionRepository: Redis get HASH_KEY: Session, key: 16f5d256-9c51-480d-bd50-4b5853df9b52
2024-08-02 21:18:30,169 INFO [http-nio-8080-exec-1] com.example.samokatclient.repositories.session.SessionRepository: Redis get HASH_KEY: Session, key: 16f5d256-9c51-480d-bd50-4b5853df9b52, value com.example.samokatclient.entities.session.Session@101bd8d8
2024-08-02 21:18:30,601 INFO [http-nio-8080-exec-2] com.example.samokatclient.repositories.session.SessionRepository: Redis get HASH_KEY: Session, key: 16f5d256-9c51-480d-bd50-4b5853df9b52
2024-08-02 21:18:30,610 INFO [http-nio-8080-exec-2] com.example.samokatclient.repositories.session.SessionRepository: Redis get HASH_KEY: Session, key: 16f5d256-9c51-480d-bd50-4b5853df9b52, value com.example.samokatclient.entities.session.Session@2466d0f7
2024-08-02 21:18:31,110 INFO [http-nio-8080-exec-4] com.example.samokatclient.repositories.session.SessionRepository: Redis get HASH_KEY: Session, key: 16f5d256-9c51-480d-bd50-4b5853df9b52
2024-08-02 21:18:31,121 INFO [http-nio-8080-exec-4] com.example.samokatclient.repositories.session.SessionRepository: Redis get HASH_KEY: Session, key: 16f5d256-9c51-480d-bd50-4b5853df9b52, value com.example.samokatclient.entities.session.Session@72368eb1
2024-08-02 21:18:47,515 INFO [http-nio-8080-exec-3] com.example.samokatclient.repositories.session.SessionRepository: Redis get HASH_KEY: Session, key: 16f5d256-9c51-480d-bd50-4b5853df9b52
2024-08-02 21:18:47,852 ERROR [http-nio-8080-exec-3] org.apache.juli.logging.DirectJDKLog: Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Handler dispatch failed: java.lang.StackOverflowError] with root cause
java.lang.StackOverflowError: null
	at java.base/java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:813)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:246)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:456)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
2024-08-02 21:19:20,625 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerRebalanceListenerInvoker: [Consumer clientId=consumer-newStatusGroupId-1, groupId=newStatusGroupId] Revoke previously assigned partitions newStatus-0
2024-08-02 21:19:20,625 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: newStatusGroupId: partitions revoked: [newStatus-0]
2024-08-02 21:19:20,625 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.AbstractCoordinator: [Consumer clientId=consumer-newStatusGroupId-1, groupId=newStatusGroupId] Member consumer-newStatusGroupId-1-cf7ca777-3773-4685-a87a-d8f00301dc3f sending LeaveGroup request to coordinator localhost:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics
2024-08-02 21:19:20,626 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.AbstractCoordinator: [Consumer clientId=consumer-newStatusGroupId-1, groupId=newStatusGroupId] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-08-02 21:19:20,626 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.AbstractCoordinator: [Consumer clientId=consumer-newStatusGroupId-1, groupId=newStatusGroupId] Request joining group due to: consumer pro-actively leaving the group
2024-08-02 21:19:20,626 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.LegacyKafkaConsumer: [Consumer clientId=consumer-newStatusGroupId-1, groupId=newStatusGroupId] Unsubscribed all topics or patterns and assigned partitions
2024-08-02 21:19:20,627 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.AbstractCoordinator: [Consumer clientId=consumer-newStatusGroupId-1, groupId=newStatusGroupId] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-08-02 21:19:20,627 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.AbstractCoordinator: [Consumer clientId=consumer-newStatusGroupId-1, groupId=newStatusGroupId] Request joining group due to: consumer pro-actively leaving the group
2024-08-02 21:19:20,713 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics: Metrics scheduler closed
2024-08-02 21:19:20,713 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics: Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-08-02 21:19:20,713 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics: Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2024-08-02 21:19:20,713 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics: Metrics reporters closed
2024-08-02 21:19:20,719 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.utils.AppInfoParser: App info kafka.consumer for consumer-newStatusGroupId-1 unregistered
2024-08-02 21:19:20,719 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: newStatusGroupId: Consumer stopped
2024-08-02 21:19:20,868 INFO [SpringApplicationShutdownHook] org.springframework.orm.jpa.AbstractEntityManagerFactoryBean: Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-02 21:19:20,869 INFO [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource: HikariPool-1 - Shutdown initiated...
2024-08-02 21:19:20,873 INFO [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource: HikariPool-1 - Shutdown completed.
2024-08-02 21:22:07,440 INFO [main] org.springframework.boot.StartupInfoLogger: Starting SamokatClientApplication using Java 22 with PID 12580 (C:\Users\arikb\Desktop\samokat-client\target\classes started by arikb in C:\Users\arikb\Desktop\samokat-client)
2024-08-02 21:22:07,441 DEBUG [main] org.springframework.boot.StartupInfoLogger: Running with Spring Boot v3.3.1, Spring v6.1.10
2024-08-02 21:22:07,442 INFO [main] org.springframework.boot.SpringApplication: No active profile set, falling back to 1 default profile: "default"
2024-08-02 21:22:08,257 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02 21:22:08,258 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-02 21:22:08,291 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Finished Spring Data repository scanning in 9 ms. Found 0 Redis repository interfaces.
2024-08-02 21:22:08,947 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02 21:22:08,948 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-02 21:22:09,159 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.samokatclient.repositories.user.AddressRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-02 21:22:09,161 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.samokatclient.repositories.user.OrderRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-02 21:22:09,163 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.samokatclient.repositories.user.PaymentRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-02 21:22:09,188 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Finished Spring Data repository scanning in 234 ms. Found 3 JPA repository interfaces.
2024-08-02 21:22:09,202 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02 21:22:09,202 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-02 21:22:09,211 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.samokatclient.repositories.product.CategoryRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-02 21:22:09,211 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.samokatclient.repositories.product.ProductRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-02 21:22:09,217 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.samokatclient.repositories.user.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-02 21:22:09,227 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Finished Spring Data repository scanning in 24 ms. Found 3 MongoDB repository interfaces.
2024-08-02 21:22:09,235 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02 21:22:09,236 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-02 21:22:09,242 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.samokatclient.repositories.product.CategoryRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02 21:22:09,242 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.samokatclient.repositories.product.ProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02 21:22:09,242 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.samokatclient.repositories.user.AddressRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02 21:22:09,242 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.samokatclient.repositories.user.OrderRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02 21:22:09,242 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.samokatclient.repositories.user.PaymentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02 21:22:09,243 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.samokatclient.repositories.user.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02 21:22:09,243 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Finished Spring Data repository scanning in 6 ms. Found 0 Redis repository interfaces.
2024-08-02 21:22:10,218 INFO [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer: Tomcat initialized with port 8080 (http)
2024-08-02 21:22:10,233 INFO [main] org.apache.juli.logging.DirectJDKLog: Initializing ProtocolHandler ["http-nio-8080"]
2024-08-02 21:22:10,235 INFO [main] org.apache.juli.logging.DirectJDKLog: Starting service [Tomcat]
2024-08-02 21:22:10,235 INFO [main] org.apache.juli.logging.DirectJDKLog: Starting Servlet engine: [Apache Tomcat/10.1.25]
2024-08-02 21:22:10,301 INFO [main] org.apache.juli.logging.DirectJDKLog: Initializing Spring embedded WebApplicationContext
2024-08-02 21:22:10,302 INFO [main] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext: Root WebApplicationContext: initialization completed in 2824 ms
2024-08-02 21:22:10,708 INFO [main] org.hibernate.jpa.internal.util.LogHelper: HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-02 21:22:10,780 INFO [main] org.hibernate.Version: HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-02 21:22:10,820 INFO [main] org.hibernate.cache.internal.RegionFactoryInitiator: HHH000026: Second-level cache disabled
2024-08-02 21:22:11,203 INFO [main] org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo: No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-02 21:22:11,231 INFO [main] com.zaxxer.hikari.HikariDataSource: HikariPool-1 - Starting...
2024-08-02 21:22:11,356 INFO [main] com.zaxxer.hikari.pool.HikariPool: HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@78c23ade
2024-08-02 21:22:11,357 INFO [main] com.zaxxer.hikari.HikariDataSource: HikariPool-1 - Start completed.
2024-08-02 21:22:11,384 WARN [main] org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl: HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-08-02 21:22:12,202 INFO [main] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator: HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-02 21:22:12,289 INFO [main] org.springframework.orm.jpa.AbstractEntityManagerFactoryBean: Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-02 21:22:12,773 INFO [main] org.springframework.data.jpa.repository.query.QueryEnhancerFactory: Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-02 21:22:13,088 INFO [main] com.mongodb.internal.diagnostics.logging.SLF4JLogger: MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/22+36-2370"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='root', source='admin', password=<hidden>, mechanismProperties=<hidden>}, transportSettings=null, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@5fc3b20b], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@53d0cf4d, com.mongodb.Jep395RecordCodecProvider@3c6c87fa, com.mongodb.KotlinCodecProvider@d7645b2]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@31c87223], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-02 21:22:13,100 INFO [cluster-ClusterId{value='66ad15c536c536424453aec5', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=24313700}
2024-08-02 21:22:13,714 WARN [main] org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration: spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-02 21:22:14,759 INFO [main] org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver: Exposing 1 endpoint beneath base path '/actuator'
2024-08-02 21:22:14,885 INFO [main] org.apache.kafka.common.config.AbstractConfig: AdminClientConfig values: 
	auto.include.jmx.reporter = true
	bootstrap.controllers = []
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	enable.metrics.push = true
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2024-08-02 21:22:14,951 INFO [main] org.apache.kafka.common.utils.AppInfoParser$AppInfo: Kafka version: 3.7.0
2024-08-02 21:22:14,952 INFO [main] org.apache.kafka.common.utils.AppInfoParser$AppInfo: Kafka commitId: 2ae524ed625438c5
2024-08-02 21:22:14,952 INFO [main] org.apache.kafka.common.utils.AppInfoParser$AppInfo: Kafka startTimeMs: 1722619334950
2024-08-02 21:22:15,323 INFO [kafka-admin-client-thread | adminclient-1] org.apache.kafka.common.utils.AppInfoParser: App info kafka.admin.client for adminclient-1 unregistered
2024-08-02 21:22:15,329 INFO [kafka-admin-client-thread | adminclient-1] org.apache.kafka.common.metrics.Metrics: Metrics scheduler closed
2024-08-02 21:22:15,329 INFO [kafka-admin-client-thread | adminclient-1] org.apache.kafka.common.metrics.Metrics: Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-08-02 21:22:15,329 INFO [kafka-admin-client-thread | adminclient-1] org.apache.kafka.common.metrics.Metrics: Metrics reporters closed
2024-08-02 21:22:15,336 INFO [main] org.apache.juli.logging.DirectJDKLog: Starting ProtocolHandler ["http-nio-8080"]
2024-08-02 21:22:15,346 INFO [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer: Tomcat started on port 8080 (http) with context path '/'
2024-08-02 21:22:15,422 INFO [main] org.apache.kafka.common.config.AbstractConfig: ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-newStatusGroupId-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = newStatusGroupId
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.JsonDeserializer

2024-08-02 21:22:15,457 INFO [main] org.apache.kafka.common.telemetry.internals.KafkaMetricsCollector$StateLedger: initializing Kafka metrics collector
2024-08-02 21:22:15,499 INFO [main] org.apache.kafka.common.config.AbstractConfig: These configurations '[spring.json.trusted.packages, spring.json.value.default.type, spring.json.use.type.headers]' were supplied but are not used yet.
2024-08-02 21:22:15,499 INFO [main] org.apache.kafka.common.utils.AppInfoParser$AppInfo: Kafka version: 3.7.0
2024-08-02 21:22:15,500 INFO [main] org.apache.kafka.common.utils.AppInfoParser$AppInfo: Kafka commitId: 2ae524ed625438c5
2024-08-02 21:22:15,500 INFO [main] org.apache.kafka.common.utils.AppInfoParser$AppInfo: Kafka startTimeMs: 1722619335499
2024-08-02 21:22:15,502 INFO [main] org.apache.kafka.clients.consumer.internals.LegacyKafkaConsumer: [Consumer clientId=consumer-newStatusGroupId-1, groupId=newStatusGroupId] Subscribed to topic(s): newStatus
2024-08-02 21:22:15,522 INFO [main] org.springframework.boot.StartupInfoLogger: Started SamokatClientApplication in 8.443 seconds (process running for 9.333)
2024-08-02 21:22:15,525 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata: [Consumer clientId=consumer-newStatusGroupId-1, groupId=newStatusGroupId] Cluster ID: ro5ZC2MwSFGcpo-n9miWSA
2024-08-02 21:22:15,525 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.AbstractCoordinator$FindCoordinatorResponseHandler: [Consumer clientId=consumer-newStatusGroupId-1, groupId=newStatusGroupId] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2024-08-02 21:22:15,527 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.AbstractCoordinator: [Consumer clientId=consumer-newStatusGroupId-1, groupId=newStatusGroupId] (Re-)joining group
2024-08-02 21:22:15,542 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.AbstractCoordinator: [Consumer clientId=consumer-newStatusGroupId-1, groupId=newStatusGroupId] Request joining group due to: need to re-join with the given member-id: consumer-newStatusGroupId-1-2e572b9d-9020-445e-b27a-3121fdc07db7
2024-08-02 21:22:15,542 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.AbstractCoordinator: [Consumer clientId=consumer-newStatusGroupId-1, groupId=newStatusGroupId] (Re-)joining group
2024-08-02 21:22:15,616 INFO [http-nio-8080-exec-1] org.apache.juli.logging.DirectJDKLog: Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-02 21:22:15,616 INFO [http-nio-8080-exec-1] org.springframework.web.servlet.FrameworkServlet: Initializing Servlet 'dispatcherServlet'
2024-08-02 21:22:15,618 INFO [http-nio-8080-exec-1] org.springframework.web.servlet.FrameworkServlet: Completed initialization in 2 ms
2024-08-02 21:22:16,215 INFO [http-nio-8080-exec-4] org.springdoc.api.AbstractOpenApiResource: Init duration for springdoc-openapi is: 389 ms
2024-08-02 21:22:18,082 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.AbstractCoordinator$JoinGroupResponseHandler: [Consumer clientId=consumer-newStatusGroupId-1, groupId=newStatusGroupId] Successfully joined group with generation Generation{generationId=6, memberId='consumer-newStatusGroupId-1-2e572b9d-9020-445e-b27a-3121fdc07db7', protocol='range'}
2024-08-02 21:22:18,088 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.AbstractCoordinator$SyncGroupResponseHandler: [Consumer clientId=consumer-newStatusGroupId-1, groupId=newStatusGroupId] Successfully synced group in generation Generation{generationId=6, memberId='consumer-newStatusGroupId-1-2e572b9d-9020-445e-b27a-3121fdc07db7', protocol='range'}
2024-08-02 21:22:18,090 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator: [Consumer clientId=consumer-newStatusGroupId-1, groupId=newStatusGroupId] Notifying assignor about the new Assignment(partitions=[newStatus-0])
2024-08-02 21:22:18,092 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerRebalanceListenerInvoker: [Consumer clientId=consumer-newStatusGroupId-1, groupId=newStatusGroupId] Adding newly assigned partitions: newStatus-0
2024-08-02 21:22:18,102 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerUtils: Setting offset for partition newStatus-0 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}
2024-08-02 21:22:18,103 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: newStatusGroupId: partitions assigned: [newStatus-0]
2024-08-02 21:23:01,550 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient: [Consumer clientId=consumer-newStatusGroupId-1, groupId=newStatusGroupId] Disconnecting from node 1 due to request timeout.
2024-08-02 21:23:01,550 WARN [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool$HouseKeeper: HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=50s92ms533µs400ns).
2024-08-02 21:23:01,555 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient: [Consumer clientId=consumer-newStatusGroupId-1, groupId=newStatusGroupId] Cancelled in-flight FETCH request with correlation id 23 due to node 1 being disconnected (elapsed time since creation: 37895ms, elapsed time since send: 37895ms, request timeout: 30000ms)
2024-08-02 21:23:01,556 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.FetchSessionHandler: [Consumer clientId=consumer-newStatusGroupId-1, groupId=newStatusGroupId] Error sending fetch request (sessionId=553401280, epoch=11) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2024-08-02 21:23:01,588 INFO [http-nio-8080-exec-5] com.example.samokatclient.repositories.session.SessionRepository: Redis get HASH_KEY: Session, key: 16f5d256-9c51-480d-bd50-4b5853df9b52
2024-08-02 21:23:05,500 ERROR [http-nio-8080-exec-5] org.apache.juli.logging.DirectJDKLog: Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Handler dispatch failed: java.lang.StackOverflowError] with root cause
java.lang.StackOverflowError: null
	at java.base/java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:813)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:246)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:456)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
2024-08-02 21:23:10,623 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerRebalanceListenerInvoker: [Consumer clientId=consumer-newStatusGroupId-1, groupId=newStatusGroupId] Revoke previously assigned partitions newStatus-0
2024-08-02 21:23:10,624 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: newStatusGroupId: partitions revoked: [newStatus-0]
2024-08-02 21:23:10,624 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.AbstractCoordinator: [Consumer clientId=consumer-newStatusGroupId-1, groupId=newStatusGroupId] Member consumer-newStatusGroupId-1-2e572b9d-9020-445e-b27a-3121fdc07db7 sending LeaveGroup request to coordinator localhost:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics
2024-08-02 21:23:10,625 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.AbstractCoordinator: [Consumer clientId=consumer-newStatusGroupId-1, groupId=newStatusGroupId] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-08-02 21:23:10,625 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.AbstractCoordinator: [Consumer clientId=consumer-newStatusGroupId-1, groupId=newStatusGroupId] Request joining group due to: consumer pro-actively leaving the group
2024-08-02 21:23:10,625 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.LegacyKafkaConsumer: [Consumer clientId=consumer-newStatusGroupId-1, groupId=newStatusGroupId] Unsubscribed all topics or patterns and assigned partitions
2024-08-02 21:23:10,626 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.AbstractCoordinator: [Consumer clientId=consumer-newStatusGroupId-1, groupId=newStatusGroupId] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-08-02 21:23:10,626 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.AbstractCoordinator: [Consumer clientId=consumer-newStatusGroupId-1, groupId=newStatusGroupId] Request joining group due to: consumer pro-actively leaving the group
2024-08-02 21:23:10,916 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics: Metrics scheduler closed
2024-08-02 21:23:10,916 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics: Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-08-02 21:23:10,916 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics: Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2024-08-02 21:23:10,916 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics: Metrics reporters closed
2024-08-02 21:23:10,922 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.utils.AppInfoParser: App info kafka.consumer for consumer-newStatusGroupId-1 unregistered
2024-08-02 21:23:10,922 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: newStatusGroupId: Consumer stopped
2024-08-02 21:23:11,106 INFO [SpringApplicationShutdownHook] org.springframework.orm.jpa.AbstractEntityManagerFactoryBean: Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-02 21:23:11,107 INFO [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource: HikariPool-1 - Shutdown initiated...
2024-08-02 21:23:11,114 INFO [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource: HikariPool-1 - Shutdown completed.
2024-08-02 21:23:36,216 INFO [main] org.springframework.boot.StartupInfoLogger: Starting SamokatClientApplication using Java 22 with PID 3592 (C:\Users\arikb\Desktop\samokat-client\target\classes started by arikb in C:\Users\arikb\Desktop\samokat-client)
2024-08-02 21:23:36,219 DEBUG [main] org.springframework.boot.StartupInfoLogger: Running with Spring Boot v3.3.1, Spring v6.1.10
2024-08-02 21:23:36,220 INFO [main] org.springframework.boot.SpringApplication: No active profile set, falling back to 1 default profile: "default"
2024-08-02 21:23:37,252 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02 21:23:37,253 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-02 21:23:37,270 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Finished Spring Data repository scanning in 4 ms. Found 0 Redis repository interfaces.
2024-08-02 21:23:37,647 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02 21:23:37,648 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-02 21:23:37,769 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.samokatclient.repositories.user.AddressRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-02 21:23:37,771 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.samokatclient.repositories.user.OrderRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-02 21:23:37,772 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.samokatclient.repositories.user.PaymentRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-02 21:23:37,790 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Finished Spring Data repository scanning in 138 ms. Found 3 JPA repository interfaces.
2024-08-02 21:23:37,798 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02 21:23:37,798 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-02 21:23:37,804 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.samokatclient.repositories.product.CategoryRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-02 21:23:37,805 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.samokatclient.repositories.product.ProductRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-02 21:23:37,806 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.samokatclient.repositories.user.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-02 21:23:37,812 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Finished Spring Data repository scanning in 13 ms. Found 3 MongoDB repository interfaces.
2024-08-02 21:23:37,817 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02 21:23:37,817 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-02 21:23:37,823 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.samokatclient.repositories.product.CategoryRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02 21:23:37,823 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.samokatclient.repositories.product.ProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02 21:23:37,823 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.samokatclient.repositories.user.AddressRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02 21:23:37,823 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.samokatclient.repositories.user.OrderRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02 21:23:37,823 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.samokatclient.repositories.user.PaymentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02 21:23:37,824 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.samokatclient.repositories.user.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02 21:23:37,824 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Finished Spring Data repository scanning in 6 ms. Found 0 Redis repository interfaces.
2024-08-02 21:23:38,564 INFO [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer: Tomcat initialized with port 8080 (http)
2024-08-02 21:23:38,573 INFO [main] org.apache.juli.logging.DirectJDKLog: Initializing ProtocolHandler ["http-nio-8080"]
2024-08-02 21:23:38,574 INFO [main] org.apache.juli.logging.DirectJDKLog: Starting service [Tomcat]
2024-08-02 21:23:38,575 INFO [main] org.apache.juli.logging.DirectJDKLog: Starting Servlet engine: [Apache Tomcat/10.1.25]
2024-08-02 21:23:38,635 INFO [main] org.apache.juli.logging.DirectJDKLog: Initializing Spring embedded WebApplicationContext
2024-08-02 21:23:38,636 INFO [main] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext: Root WebApplicationContext: initialization completed in 2353 ms
2024-08-02 21:23:38,922 INFO [main] org.hibernate.jpa.internal.util.LogHelper: HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-02 21:23:38,970 INFO [main] org.hibernate.Version: HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-02 21:23:38,999 INFO [main] org.hibernate.cache.internal.RegionFactoryInitiator: HHH000026: Second-level cache disabled
2024-08-02 21:23:39,261 INFO [main] org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo: No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-02 21:23:39,284 INFO [main] com.zaxxer.hikari.HikariDataSource: HikariPool-1 - Starting...
2024-08-02 21:23:39,407 INFO [main] com.zaxxer.hikari.pool.HikariPool: HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@6b529d42
2024-08-02 21:23:39,408 INFO [main] com.zaxxer.hikari.HikariDataSource: HikariPool-1 - Start completed.
2024-08-02 21:23:39,435 WARN [main] org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl: HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-08-02 21:23:40,254 INFO [main] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator: HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-02 21:23:40,344 INFO [main] org.springframework.orm.jpa.AbstractEntityManagerFactoryBean: Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-02 21:23:40,864 INFO [main] org.springframework.data.jpa.repository.query.QueryEnhancerFactory: Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-02 21:23:41,223 INFO [main] com.mongodb.internal.diagnostics.logging.SLF4JLogger: MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/22+36-2370"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='root', source='admin', password=<hidden>, mechanismProperties=<hidden>}, transportSettings=null, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@53a20aab], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@11736ebc, com.mongodb.Jep395RecordCodecProvider@4a03c4bc, com.mongodb.KotlinCodecProvider@3d0c88f4]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@6b09fcda], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-02 21:23:41,234 INFO [cluster-ClusterId{value='66ad161dc96e7b3ececa7aaa', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=22161200}
2024-08-02 21:23:41,925 WARN [main] org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration: spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-02 21:23:43,134 INFO [main] org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver: Exposing 1 endpoint beneath base path '/actuator'
2024-08-02 21:23:43,314 INFO [main] org.apache.kafka.common.config.AbstractConfig: AdminClientConfig values: 
	auto.include.jmx.reporter = true
	bootstrap.controllers = []
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	enable.metrics.push = true
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2024-08-02 21:23:43,411 INFO [main] org.apache.kafka.common.utils.AppInfoParser$AppInfo: Kafka version: 3.7.0
2024-08-02 21:23:43,412 INFO [main] org.apache.kafka.common.utils.AppInfoParser$AppInfo: Kafka commitId: 2ae524ed625438c5
2024-08-02 21:23:43,412 INFO [main] org.apache.kafka.common.utils.AppInfoParser$AppInfo: Kafka startTimeMs: 1722619423410
2024-08-02 21:23:43,877 INFO [kafka-admin-client-thread | adminclient-1] org.apache.kafka.common.utils.AppInfoParser: App info kafka.admin.client for adminclient-1 unregistered
2024-08-02 21:23:43,881 INFO [kafka-admin-client-thread | adminclient-1] org.apache.kafka.common.metrics.Metrics: Metrics scheduler closed
2024-08-02 21:23:43,881 INFO [kafka-admin-client-thread | adminclient-1] org.apache.kafka.common.metrics.Metrics: Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-08-02 21:23:43,882 INFO [kafka-admin-client-thread | adminclient-1] org.apache.kafka.common.metrics.Metrics: Metrics reporters closed
2024-08-02 21:23:43,887 INFO [main] org.apache.juli.logging.DirectJDKLog: Starting ProtocolHandler ["http-nio-8080"]
2024-08-02 21:23:43,898 INFO [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer: Tomcat started on port 8080 (http) with context path '/'
2024-08-02 21:23:43,993 INFO [main] org.apache.kafka.common.config.AbstractConfig: ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-newStatusGroupId-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = newStatusGroupId
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.JsonDeserializer

2024-08-02 21:23:44,003 INFO [http-nio-8080-exec-1] org.apache.juli.logging.DirectJDKLog: Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-02 21:23:44,003 INFO [http-nio-8080-exec-1] org.springframework.web.servlet.FrameworkServlet: Initializing Servlet 'dispatcherServlet'
2024-08-02 21:23:44,005 INFO [http-nio-8080-exec-1] org.springframework.web.servlet.FrameworkServlet: Completed initialization in 2 ms
2024-08-02 21:23:44,045 INFO [main] org.apache.kafka.common.telemetry.internals.KafkaMetricsCollector$StateLedger: initializing Kafka metrics collector
2024-08-02 21:23:49,467 INFO [main] org.apache.kafka.common.config.AbstractConfig: These configurations '[spring.json.trusted.packages, spring.json.value.default.type, spring.json.use.type.headers]' were supplied but are not used yet.
2024-08-02 21:23:49,468 INFO [main] org.apache.kafka.common.utils.AppInfoParser$AppInfo: Kafka version: 3.7.0
2024-08-02 21:23:49,469 INFO [main] org.apache.kafka.common.utils.AppInfoParser$AppInfo: Kafka commitId: 2ae524ed625438c5
2024-08-02 21:23:49,470 INFO [main] org.apache.kafka.common.utils.AppInfoParser$AppInfo: Kafka startTimeMs: 1722619429468
2024-08-02 21:23:49,472 INFO [main] org.apache.kafka.clients.consumer.internals.LegacyKafkaConsumer: [Consumer clientId=consumer-newStatusGroupId-1, groupId=newStatusGroupId] Subscribed to topic(s): newStatus
2024-08-02 21:23:49,507 INFO [main] org.springframework.boot.StartupInfoLogger: Started SamokatClientApplication in 13.841 seconds (process running for 15.06)
2024-08-02 21:23:49,519 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata: [Consumer clientId=consumer-newStatusGroupId-1, groupId=newStatusGroupId] Cluster ID: ro5ZC2MwSFGcpo-n9miWSA
2024-08-02 21:23:49,520 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.AbstractCoordinator$FindCoordinatorResponseHandler: [Consumer clientId=consumer-newStatusGroupId-1, groupId=newStatusGroupId] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2024-08-02 21:23:49,523 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.AbstractCoordinator: [Consumer clientId=consumer-newStatusGroupId-1, groupId=newStatusGroupId] (Re-)joining group
2024-08-02 21:23:49,542 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.AbstractCoordinator: [Consumer clientId=consumer-newStatusGroupId-1, groupId=newStatusGroupId] Request joining group due to: need to re-join with the given member-id: consumer-newStatusGroupId-1-d2b7b19d-dd6a-47b7-9cd6-5ace94c0feeb
2024-08-02 21:23:49,543 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.AbstractCoordinator: [Consumer clientId=consumer-newStatusGroupId-1, groupId=newStatusGroupId] (Re-)joining group
2024-08-02 21:23:49,609 INFO [http-nio-8080-exec-1] com.example.samokatclient.repositories.session.SessionRepository: Redis get HASH_KEY: Session, key: 16f5d256-9c51-480d-bd50-4b5853df9b52
2024-08-02 21:24:22,737 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.AbstractCoordinator$JoinGroupResponseHandler: [Consumer clientId=consumer-newStatusGroupId-1, groupId=newStatusGroupId] Successfully joined group with generation Generation{generationId=8, memberId='consumer-newStatusGroupId-1-d2b7b19d-dd6a-47b7-9cd6-5ace94c0feeb', protocol='range'}
2024-08-02 21:24:22,744 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.AbstractCoordinator$SyncGroupResponseHandler: [Consumer clientId=consumer-newStatusGroupId-1, groupId=newStatusGroupId] Successfully synced group in generation Generation{generationId=8, memberId='consumer-newStatusGroupId-1-d2b7b19d-dd6a-47b7-9cd6-5ace94c0feeb', protocol='range'}
2024-08-02 21:24:22,751 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator: [Consumer clientId=consumer-newStatusGroupId-1, groupId=newStatusGroupId] Notifying assignor about the new Assignment(partitions=[newStatus-0])
2024-08-02 21:24:22,756 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerRebalanceListenerInvoker: [Consumer clientId=consumer-newStatusGroupId-1, groupId=newStatusGroupId] Adding newly assigned partitions: newStatus-0
2024-08-02 21:24:22,771 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerUtils: Setting offset for partition newStatus-0 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}
2024-08-02 21:24:22,772 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: newStatusGroupId: partitions assigned: [newStatus-0]
2024-08-02 21:26:03,004 INFO [http-nio-8080-exec-5] com.example.samokatclient.repositories.session.SessionRepository: Redis get HASH_KEY: Session, key: 16f5d256-9c51-480d-bd50-4b5853df9b52
2024-08-02 21:26:03,011 ERROR [http-nio-8080-exec-1] org.apache.juli.logging.DirectJDKLog: Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Handler dispatch failed: java.lang.StackOverflowError] with root cause
java.lang.StackOverflowError: null
	at com.example.samokatclient.entities.product.Category.getParent(Category.java:31)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4507)
	at com.example.samokatclient.entities.product.Category.toString(Category.java:13)
2024-08-02 21:26:03,040 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerRebalanceListenerInvoker: [Consumer clientId=consumer-newStatusGroupId-1, groupId=newStatusGroupId] Revoke previously assigned partitions newStatus-0
2024-08-02 21:26:03,041 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: newStatusGroupId: partitions revoked: [newStatus-0]
2024-08-02 21:26:03,042 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.AbstractCoordinator: [Consumer clientId=consumer-newStatusGroupId-1, groupId=newStatusGroupId] Member consumer-newStatusGroupId-1-d2b7b19d-dd6a-47b7-9cd6-5ace94c0feeb sending LeaveGroup request to coordinator localhost:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics
2024-08-02 21:26:03,043 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.AbstractCoordinator: [Consumer clientId=consumer-newStatusGroupId-1, groupId=newStatusGroupId] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-08-02 21:26:03,043 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.AbstractCoordinator: [Consumer clientId=consumer-newStatusGroupId-1, groupId=newStatusGroupId] Request joining group due to: consumer pro-actively leaving the group
2024-08-02 21:26:03,044 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.LegacyKafkaConsumer: [Consumer clientId=consumer-newStatusGroupId-1, groupId=newStatusGroupId] Unsubscribed all topics or patterns and assigned partitions
2024-08-02 21:26:03,046 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.AbstractCoordinator: [Consumer clientId=consumer-newStatusGroupId-1, groupId=newStatusGroupId] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-08-02 21:26:03,047 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.AbstractCoordinator: [Consumer clientId=consumer-newStatusGroupId-1, groupId=newStatusGroupId] Request joining group due to: consumer pro-actively leaving the group
2024-08-02 21:26:03,463 INFO [http-nio-8080-exec-8] org.springdoc.api.AbstractOpenApiResource: Init duration for springdoc-openapi is: 331 ms
2024-08-02 21:26:03,502 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics: Metrics scheduler closed
2024-08-02 21:26:03,503 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics: Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-08-02 21:26:03,503 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics: Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2024-08-02 21:26:03,503 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics: Metrics reporters closed
2024-08-02 21:26:03,509 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.utils.AppInfoParser: App info kafka.consumer for consumer-newStatusGroupId-1 unregistered
2024-08-02 21:26:03,510 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: newStatusGroupId: Consumer stopped
2024-08-02 21:26:03,647 INFO [SpringApplicationShutdownHook] org.springframework.orm.jpa.AbstractEntityManagerFactoryBean: Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-02 21:26:03,649 INFO [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource: HikariPool-1 - Shutdown initiated...
2024-08-02 21:26:03,656 INFO [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource: HikariPool-1 - Shutdown completed.
2024-08-02 21:26:06,251 INFO [main] org.springframework.boot.StartupInfoLogger: Starting SamokatClientApplication using Java 22 with PID 20416 (C:\Users\arikb\Desktop\samokat-client\target\classes started by arikb in C:\Users\arikb\Desktop\samokat-client)
2024-08-02 21:26:06,254 DEBUG [main] org.springframework.boot.StartupInfoLogger: Running with Spring Boot v3.3.1, Spring v6.1.10
2024-08-02 21:26:06,255 INFO [main] org.springframework.boot.SpringApplication: No active profile set, falling back to 1 default profile: "default"
2024-08-02 21:26:06,969 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02 21:26:06,970 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-02 21:26:06,990 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Finished Spring Data repository scanning in 8 ms. Found 0 Redis repository interfaces.
2024-08-02 21:26:07,367 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02 21:26:07,368 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-02 21:26:07,475 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.samokatclient.repositories.user.AddressRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-02 21:26:07,476 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.samokatclient.repositories.user.OrderRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-02 21:26:07,478 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.samokatclient.repositories.user.PaymentRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-02 21:26:07,500 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Finished Spring Data repository scanning in 129 ms. Found 3 JPA repository interfaces.
2024-08-02 21:26:07,507 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02 21:26:07,507 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-02 21:26:07,513 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.samokatclient.repositories.product.CategoryRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-02 21:26:07,513 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.samokatclient.repositories.product.ProductRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-02 21:26:07,516 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.samokatclient.repositories.user.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-02 21:26:07,522 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Finished Spring Data repository scanning in 14 ms. Found 3 MongoDB repository interfaces.
2024-08-02 21:26:07,526 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02 21:26:07,526 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-02 21:26:07,532 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.samokatclient.repositories.product.CategoryRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02 21:26:07,532 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.samokatclient.repositories.product.ProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02 21:26:07,532 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.samokatclient.repositories.user.AddressRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02 21:26:07,532 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.samokatclient.repositories.user.OrderRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02 21:26:07,532 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.samokatclient.repositories.user.PaymentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02 21:26:07,532 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.samokatclient.repositories.user.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02 21:26:07,533 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Finished Spring Data repository scanning in 6 ms. Found 0 Redis repository interfaces.
2024-08-02 21:26:08,200 INFO [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer: Tomcat initialized with port 8080 (http)
2024-08-02 21:26:08,209 INFO [main] org.apache.juli.logging.DirectJDKLog: Initializing ProtocolHandler ["http-nio-8080"]
2024-08-02 21:26:08,211 INFO [main] org.apache.juli.logging.DirectJDKLog: Starting service [Tomcat]
2024-08-02 21:26:08,211 INFO [main] org.apache.juli.logging.DirectJDKLog: Starting Servlet engine: [Apache Tomcat/10.1.25]
2024-08-02 21:26:08,265 INFO [main] org.apache.juli.logging.DirectJDKLog: Initializing Spring embedded WebApplicationContext
2024-08-02 21:26:08,265 INFO [main] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext: Root WebApplicationContext: initialization completed in 1975 ms
2024-08-02 21:26:08,556 INFO [main] org.hibernate.jpa.internal.util.LogHelper: HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-02 21:26:08,605 INFO [main] org.hibernate.Version: HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-02 21:26:08,637 INFO [main] org.hibernate.cache.internal.RegionFactoryInitiator: HHH000026: Second-level cache disabled
2024-08-02 21:26:08,890 INFO [main] org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo: No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-02 21:26:08,917 INFO [main] com.zaxxer.hikari.HikariDataSource: HikariPool-1 - Starting...
2024-08-02 21:26:09,035 INFO [main] com.zaxxer.hikari.pool.HikariPool: HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2148b47e
2024-08-02 21:26:09,036 INFO [main] com.zaxxer.hikari.HikariDataSource: HikariPool-1 - Start completed.
2024-08-02 21:26:09,063 WARN [main] org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl: HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-08-02 21:26:09,869 INFO [main] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator: HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-02 21:26:09,957 INFO [main] org.springframework.orm.jpa.AbstractEntityManagerFactoryBean: Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-02 21:26:10,434 INFO [main] org.springframework.data.jpa.repository.query.QueryEnhancerFactory: Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-02 21:26:10,751 INFO [main] com.mongodb.internal.diagnostics.logging.SLF4JLogger: MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/22+36-2370"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='root', source='admin', password=<hidden>, mechanismProperties=<hidden>}, transportSettings=null, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@66227940], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@49e3b86b, com.mongodb.Jep395RecordCodecProvider@64b262a7, com.mongodb.KotlinCodecProvider@771c4015]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@6f3f2340], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-02 21:26:10,761 INFO [cluster-ClusterId{value='66ad16b2b47c906483f69e51', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=22063000}
2024-08-02 21:26:11,366 WARN [main] org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration: spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-02 21:26:12,491 INFO [main] org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver: Exposing 1 endpoint beneath base path '/actuator'
2024-08-02 21:26:12,607 INFO [main] org.apache.kafka.common.config.AbstractConfig: AdminClientConfig values: 
	auto.include.jmx.reporter = true
	bootstrap.controllers = []
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	enable.metrics.push = true
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2024-08-02 21:26:12,666 INFO [main] org.apache.kafka.common.utils.AppInfoParser$AppInfo: Kafka version: 3.7.0
2024-08-02 21:26:12,666 INFO [main] org.apache.kafka.common.utils.AppInfoParser$AppInfo: Kafka commitId: 2ae524ed625438c5
2024-08-02 21:26:12,666 INFO [main] org.apache.kafka.common.utils.AppInfoParser$AppInfo: Kafka startTimeMs: 1722619572665
2024-08-02 21:26:12,968 INFO [kafka-admin-client-thread | adminclient-1] org.apache.kafka.common.utils.AppInfoParser: App info kafka.admin.client for adminclient-1 unregistered
2024-08-02 21:26:12,972 INFO [kafka-admin-client-thread | adminclient-1] org.apache.kafka.common.metrics.Metrics: Metrics scheduler closed
2024-08-02 21:26:12,973 INFO [kafka-admin-client-thread | adminclient-1] org.apache.kafka.common.metrics.Metrics: Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-08-02 21:26:12,973 INFO [kafka-admin-client-thread | adminclient-1] org.apache.kafka.common.metrics.Metrics: Metrics reporters closed
2024-08-02 21:26:12,977 INFO [main] org.apache.juli.logging.DirectJDKLog: Starting ProtocolHandler ["http-nio-8080"]
2024-08-02 21:26:12,986 INFO [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer: Tomcat started on port 8080 (http) with context path '/'
2024-08-02 21:26:13,070 INFO [main] org.apache.kafka.common.config.AbstractConfig: ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-newStatusGroupId-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = newStatusGroupId
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.JsonDeserializer

2024-08-02 21:26:13,102 INFO [main] org.apache.kafka.common.telemetry.internals.KafkaMetricsCollector$StateLedger: initializing Kafka metrics collector
2024-08-02 21:26:13,140 INFO [main] org.apache.kafka.common.config.AbstractConfig: These configurations '[spring.json.trusted.packages, spring.json.value.default.type, spring.json.use.type.headers]' were supplied but are not used yet.
2024-08-02 21:26:13,140 INFO [main] org.apache.kafka.common.utils.AppInfoParser$AppInfo: Kafka version: 3.7.0
2024-08-02 21:26:13,140 INFO [main] org.apache.kafka.common.utils.AppInfoParser$AppInfo: Kafka commitId: 2ae524ed625438c5
2024-08-02 21:26:13,140 INFO [main] org.apache.kafka.common.utils.AppInfoParser$AppInfo: Kafka startTimeMs: 1722619573140
2024-08-02 21:26:13,144 INFO [main] org.apache.kafka.clients.consumer.internals.LegacyKafkaConsumer: [Consumer clientId=consumer-newStatusGroupId-1, groupId=newStatusGroupId] Subscribed to topic(s): newStatus
2024-08-02 21:26:13,164 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata: [Consumer clientId=consumer-newStatusGroupId-1, groupId=newStatusGroupId] Cluster ID: ro5ZC2MwSFGcpo-n9miWSA
2024-08-02 21:26:13,164 INFO [main] org.springframework.boot.StartupInfoLogger: Started SamokatClientApplication in 7.295 seconds (process running for 8.269)
2024-08-02 21:26:13,164 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.AbstractCoordinator$FindCoordinatorResponseHandler: [Consumer clientId=consumer-newStatusGroupId-1, groupId=newStatusGroupId] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2024-08-02 21:26:13,167 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.AbstractCoordinator: [Consumer clientId=consumer-newStatusGroupId-1, groupId=newStatusGroupId] (Re-)joining group
2024-08-02 21:26:13,182 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.AbstractCoordinator: [Consumer clientId=consumer-newStatusGroupId-1, groupId=newStatusGroupId] Request joining group due to: need to re-join with the given member-id: consumer-newStatusGroupId-1-f669cad9-7a2e-4e6a-93e2-68db94923fae
2024-08-02 21:26:13,183 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.AbstractCoordinator: [Consumer clientId=consumer-newStatusGroupId-1, groupId=newStatusGroupId] (Re-)joining group
2024-08-02 21:26:13,736 INFO [RMI TCP Connection(4)-192.168.0.107] org.apache.juli.logging.DirectJDKLog: Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-02 21:26:13,736 INFO [RMI TCP Connection(4)-192.168.0.107] org.springframework.web.servlet.FrameworkServlet: Initializing Servlet 'dispatcherServlet'
2024-08-02 21:26:13,738 INFO [RMI TCP Connection(4)-192.168.0.107] org.springframework.web.servlet.FrameworkServlet: Completed initialization in 1 ms
2024-08-02 21:26:15,686 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.AbstractCoordinator$JoinGroupResponseHandler: [Consumer clientId=consumer-newStatusGroupId-1, groupId=newStatusGroupId] Successfully joined group with generation Generation{generationId=10, memberId='consumer-newStatusGroupId-1-f669cad9-7a2e-4e6a-93e2-68db94923fae', protocol='range'}
2024-08-02 21:26:15,700 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.AbstractCoordinator$SyncGroupResponseHandler: [Consumer clientId=consumer-newStatusGroupId-1, groupId=newStatusGroupId] Successfully synced group in generation Generation{generationId=10, memberId='consumer-newStatusGroupId-1-f669cad9-7a2e-4e6a-93e2-68db94923fae', protocol='range'}
2024-08-02 21:26:15,703 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator: [Consumer clientId=consumer-newStatusGroupId-1, groupId=newStatusGroupId] Notifying assignor about the new Assignment(partitions=[newStatus-0])
2024-08-02 21:26:15,706 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerRebalanceListenerInvoker: [Consumer clientId=consumer-newStatusGroupId-1, groupId=newStatusGroupId] Adding newly assigned partitions: newStatus-0
2024-08-02 21:26:15,715 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerUtils: Setting offset for partition newStatus-0 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}
2024-08-02 21:26:15,717 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: newStatusGroupId: partitions assigned: [newStatus-0]
2024-08-02 21:26:51,688 INFO [http-nio-8080-exec-3] org.springdoc.api.AbstractOpenApiResource: Init duration for springdoc-openapi is: 332 ms
2024-08-02 21:27:02,716 INFO [http-nio-8080-exec-5] com.example.samokatclient.repositories.session.SessionRepository: Redis get HASH_KEY: Session, key: 16f5d256-9c51-480d-bd50-4b5853df9b52
2024-08-02 21:32:17,368 WARN [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool$HouseKeeper: HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=55s865ms704µs700ns).
2024-08-02 21:32:28,464 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerRebalanceListenerInvoker: [Consumer clientId=consumer-newStatusGroupId-1, groupId=newStatusGroupId] Revoke previously assigned partitions newStatus-0
2024-08-02 21:32:28,466 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: newStatusGroupId: partitions revoked: [newStatus-0]
2024-08-02 21:32:28,466 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.AbstractCoordinator: [Consumer clientId=consumer-newStatusGroupId-1, groupId=newStatusGroupId] Member consumer-newStatusGroupId-1-f669cad9-7a2e-4e6a-93e2-68db94923fae sending LeaveGroup request to coordinator localhost:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics
2024-08-02 21:32:28,467 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.AbstractCoordinator: [Consumer clientId=consumer-newStatusGroupId-1, groupId=newStatusGroupId] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-08-02 21:32:28,467 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.AbstractCoordinator: [Consumer clientId=consumer-newStatusGroupId-1, groupId=newStatusGroupId] Request joining group due to: consumer pro-actively leaving the group
2024-08-02 21:32:28,467 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.LegacyKafkaConsumer: [Consumer clientId=consumer-newStatusGroupId-1, groupId=newStatusGroupId] Unsubscribed all topics or patterns and assigned partitions
2024-08-02 21:32:28,469 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.AbstractCoordinator: [Consumer clientId=consumer-newStatusGroupId-1, groupId=newStatusGroupId] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-08-02 21:32:28,470 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.AbstractCoordinator: [Consumer clientId=consumer-newStatusGroupId-1, groupId=newStatusGroupId] Request joining group due to: consumer pro-actively leaving the group
2024-08-02 21:32:28,959 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics: Metrics scheduler closed
2024-08-02 21:32:28,959 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics: Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-08-02 21:32:28,959 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics: Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2024-08-02 21:32:28,959 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics: Metrics reporters closed
2024-08-02 21:32:28,965 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.utils.AppInfoParser: App info kafka.consumer for consumer-newStatusGroupId-1 unregistered
2024-08-02 21:32:28,966 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: newStatusGroupId: Consumer stopped
2024-08-02 21:32:34,137 INFO [SpringApplicationShutdownHook] org.springframework.orm.jpa.AbstractEntityManagerFactoryBean: Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-02 21:32:34,140 INFO [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource: HikariPool-1 - Shutdown initiated...
2024-08-02 21:32:34,148 INFO [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource: HikariPool-1 - Shutdown completed.
2024-08-02 21:34:37,281 INFO [main] org.springframework.boot.StartupInfoLogger: Starting SamokatClientApplication using Java 22 with PID 19896 (C:\Users\arikb\Desktop\samokat-client\target\classes started by arikb in C:\Users\arikb\Desktop\samokat-client)
2024-08-02 21:34:37,282 DEBUG [main] org.springframework.boot.StartupInfoLogger: Running with Spring Boot v3.3.1, Spring v6.1.10
2024-08-02 21:34:37,283 INFO [main] org.springframework.boot.SpringApplication: No active profile set, falling back to 1 default profile: "default"
2024-08-02 21:34:37,946 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02 21:34:37,946 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-02 21:34:37,961 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2024-08-02 21:34:38,331 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02 21:34:38,332 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-02 21:34:38,445 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.samokatclient.repositories.user.AddressRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-02 21:34:38,448 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.samokatclient.repositories.user.OrderRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-02 21:34:38,449 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.samokatclient.repositories.user.PaymentRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-02 21:34:38,471 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Finished Spring Data repository scanning in 137 ms. Found 3 JPA repository interfaces.
2024-08-02 21:34:38,481 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02 21:34:38,481 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-02 21:34:38,488 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.samokatclient.repositories.product.CategoryRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-02 21:34:38,488 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.samokatclient.repositories.product.ProductRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-02 21:34:38,492 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.samokatclient.repositories.user.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-02 21:34:38,499 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Finished Spring Data repository scanning in 18 ms. Found 3 MongoDB repository interfaces.
2024-08-02 21:34:38,505 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02 21:34:38,506 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-02 21:34:38,511 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.samokatclient.repositories.product.CategoryRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02 21:34:38,511 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.samokatclient.repositories.product.ProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02 21:34:38,512 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.samokatclient.repositories.user.AddressRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02 21:34:38,512 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.samokatclient.repositories.user.OrderRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02 21:34:38,512 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.samokatclient.repositories.user.PaymentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02 21:34:38,512 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport: Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.samokatclient.repositories.user.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02 21:34:38,512 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate: Finished Spring Data repository scanning in 6 ms. Found 0 Redis repository interfaces.
2024-08-02 21:34:39,185 INFO [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer: Tomcat initialized with port 8080 (http)
2024-08-02 21:34:39,195 INFO [main] org.apache.juli.logging.DirectJDKLog: Initializing ProtocolHandler ["http-nio-8080"]
2024-08-02 21:34:39,197 INFO [main] org.apache.juli.logging.DirectJDKLog: Starting service [Tomcat]
2024-08-02 21:34:39,197 INFO [main] org.apache.juli.logging.DirectJDKLog: Starting Servlet engine: [Apache Tomcat/10.1.25]
2024-08-02 21:34:39,248 INFO [main] org.apache.juli.logging.DirectJDKLog: Initializing Spring embedded WebApplicationContext
2024-08-02 21:34:39,248 INFO [main] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext: Root WebApplicationContext: initialization completed in 1931 ms
2024-08-02 21:34:39,519 INFO [main] org.hibernate.jpa.internal.util.LogHelper: HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-02 21:34:39,563 INFO [main] org.hibernate.Version: HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-02 21:34:39,588 INFO [main] org.hibernate.cache.internal.RegionFactoryInitiator: HHH000026: Second-level cache disabled
2024-08-02 21:34:39,825 INFO [main] org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo: No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-02 21:34:39,846 INFO [main] com.zaxxer.hikari.HikariDataSource: HikariPool-1 - Starting...
2024-08-02 21:34:39,955 INFO [main] com.zaxxer.hikari.pool.HikariPool: HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@174f0d06
2024-08-02 21:34:39,957 INFO [main] com.zaxxer.hikari.HikariDataSource: HikariPool-1 - Start completed.
2024-08-02 21:34:39,982 WARN [main] org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl: HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-08-02 21:34:40,765 INFO [main] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator: HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-02 21:34:40,853 INFO [main] org.springframework.orm.jpa.AbstractEntityManagerFactoryBean: Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-02 21:34:41,361 INFO [main] org.springframework.data.jpa.repository.query.QueryEnhancerFactory: Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-02 21:34:41,702 INFO [main] com.mongodb.internal.diagnostics.logging.SLF4JLogger: MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/22+36-2370"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='root', source='admin', password=<hidden>, mechanismProperties=<hidden>}, transportSettings=null, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@451e8bd0], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@3a5812dc, com.mongodb.Jep395RecordCodecProvider@3ddec942, com.mongodb.KotlinCodecProvider@495c3d15]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@5fe1b8d2], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-02 21:34:41,715 INFO [cluster-ClusterId{value='66ad18b13e7027710dd9a9ef', description='null'}-localhost:27017] com.mongodb.internal.diagnostics.logging.SLF4JLogger: Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=27022000}
2024-08-02 21:34:42,535 WARN [main] org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration: spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-02 21:34:43,492 INFO [main] org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver: Exposing 1 endpoint beneath base path '/actuator'
2024-08-02 21:34:43,584 INFO [main] org.apache.kafka.common.config.AbstractConfig: AdminClientConfig values: 
	auto.include.jmx.reporter = true
	bootstrap.controllers = []
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	enable.metrics.push = true
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2024-08-02 21:34:43,631 INFO [main] org.apache.kafka.common.utils.AppInfoParser$AppInfo: Kafka version: 3.7.0
2024-08-02 21:34:43,631 INFO [main] org.apache.kafka.common.utils.AppInfoParser$AppInfo: Kafka commitId: 2ae524ed625438c5
2024-08-02 21:34:43,632 INFO [main] org.apache.kafka.common.utils.AppInfoParser$AppInfo: Kafka startTimeMs: 1722620083629
2024-08-02 21:34:43,904 INFO [kafka-admin-client-thread | adminclient-1] org.apache.kafka.common.utils.AppInfoParser: App info kafka.admin.client for adminclient-1 unregistered
2024-08-02 21:34:43,908 INFO [kafka-admin-client-thread | adminclient-1] org.apache.kafka.common.metrics.Metrics: Metrics scheduler closed
2024-08-02 21:34:43,908 INFO [kafka-admin-client-thread | adminclient-1] org.apache.kafka.common.metrics.Metrics: Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-08-02 21:34:43,909 INFO [kafka-admin-client-thread | adminclient-1] org.apache.kafka.common.metrics.Metrics: Metrics reporters closed
2024-08-02 21:34:43,912 INFO [main] org.apache.juli.logging.DirectJDKLog: Starting ProtocolHandler ["http-nio-8080"]
2024-08-02 21:34:43,920 INFO [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer: Tomcat started on port 8080 (http) with context path '/'
2024-08-02 21:34:43,972 INFO [main] org.apache.kafka.common.config.AbstractConfig: ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-newStatusGroupId-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = newStatusGroupId
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.JsonDeserializer

2024-08-02 21:34:44,001 INFO [main] org.apache.kafka.common.telemetry.internals.KafkaMetricsCollector$StateLedger: initializing Kafka metrics collector
2024-08-02 21:34:44,036 INFO [main] org.apache.kafka.common.config.AbstractConfig: These configurations '[spring.json.trusted.packages, spring.json.value.default.type, spring.json.use.type.headers]' were supplied but are not used yet.
2024-08-02 21:34:44,037 INFO [main] org.apache.kafka.common.utils.AppInfoParser$AppInfo: Kafka version: 3.7.0
2024-08-02 21:34:44,037 INFO [main] org.apache.kafka.common.utils.AppInfoParser$AppInfo: Kafka commitId: 2ae524ed625438c5
2024-08-02 21:34:44,037 INFO [main] org.apache.kafka.common.utils.AppInfoParser$AppInfo: Kafka startTimeMs: 1722620084037
2024-08-02 21:34:44,041 INFO [main] org.apache.kafka.clients.consumer.internals.LegacyKafkaConsumer: [Consumer clientId=consumer-newStatusGroupId-1, groupId=newStatusGroupId] Subscribed to topic(s): newStatus
2024-08-02 21:34:44,059 INFO [main] org.springframework.boot.StartupInfoLogger: Started SamokatClientApplication in 7.163 seconds (process running for 8.046)
2024-08-02 21:34:44,061 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata: [Consumer clientId=consumer-newStatusGroupId-1, groupId=newStatusGroupId] Cluster ID: ro5ZC2MwSFGcpo-n9miWSA
2024-08-02 21:34:44,061 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.AbstractCoordinator$FindCoordinatorResponseHandler: [Consumer clientId=consumer-newStatusGroupId-1, groupId=newStatusGroupId] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2024-08-02 21:34:44,064 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.AbstractCoordinator: [Consumer clientId=consumer-newStatusGroupId-1, groupId=newStatusGroupId] (Re-)joining group
2024-08-02 21:34:44,077 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.AbstractCoordinator: [Consumer clientId=consumer-newStatusGroupId-1, groupId=newStatusGroupId] Request joining group due to: need to re-join with the given member-id: consumer-newStatusGroupId-1-61844c0d-2b04-47a8-b661-f695fbdfe466
2024-08-02 21:34:44,078 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.AbstractCoordinator: [Consumer clientId=consumer-newStatusGroupId-1, groupId=newStatusGroupId] (Re-)joining group
2024-08-02 21:34:44,434 INFO [RMI TCP Connection(2)-192.168.0.107] org.apache.juli.logging.DirectJDKLog: Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-02 21:34:44,434 INFO [RMI TCP Connection(2)-192.168.0.107] org.springframework.web.servlet.FrameworkServlet: Initializing Servlet 'dispatcherServlet'
2024-08-02 21:34:44,435 INFO [RMI TCP Connection(2)-192.168.0.107] org.springframework.web.servlet.FrameworkServlet: Completed initialization in 1 ms
2024-08-02 21:34:46,863 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.AbstractCoordinator$JoinGroupResponseHandler: [Consumer clientId=consumer-newStatusGroupId-1, groupId=newStatusGroupId] Successfully joined group with generation Generation{generationId=12, memberId='consumer-newStatusGroupId-1-61844c0d-2b04-47a8-b661-f695fbdfe466', protocol='range'}
2024-08-02 21:34:46,869 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.AbstractCoordinator$SyncGroupResponseHandler: [Consumer clientId=consumer-newStatusGroupId-1, groupId=newStatusGroupId] Successfully synced group in generation Generation{generationId=12, memberId='consumer-newStatusGroupId-1-61844c0d-2b04-47a8-b661-f695fbdfe466', protocol='range'}
2024-08-02 21:34:46,872 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator: [Consumer clientId=consumer-newStatusGroupId-1, groupId=newStatusGroupId] Notifying assignor about the new Assignment(partitions=[newStatus-0])
2024-08-02 21:34:46,873 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerRebalanceListenerInvoker: [Consumer clientId=consumer-newStatusGroupId-1, groupId=newStatusGroupId] Adding newly assigned partitions: newStatus-0
2024-08-02 21:34:46,884 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerUtils: Setting offset for partition newStatus-0 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}
2024-08-02 21:34:46,884 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: newStatusGroupId: partitions assigned: [newStatus-0]
2024-08-02 21:34:47,116 INFO [http-nio-8080-exec-8] org.springdoc.api.AbstractOpenApiResource: Init duration for springdoc-openapi is: 325 ms
2024-08-02 21:35:57,517 INFO [http-nio-8080-exec-7] com.example.samokatclient.repositories.session.SessionRepository: Redis get HASH_KEY: Session, key: 16f5d256-9c51-480d-bd50-4b5853df9b52
2024-08-02 21:35:57,582 INFO [http-nio-8080-exec-7] com.example.samokatclient.repositories.currentOrder.CurrentOrderClientRepository: Redis put HASH_KEY: CurrentOrderClient, key: 5241454d-a678-4ea3-a450-f785bff41051
2024-08-02 21:35:57,596 INFO [http-nio-8080-exec-7] org.apache.kafka.common.config.AbstractConfig: ProducerConfig values: 
	acks = -1
	auto.include.jmx.reporter = true
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	enable.metrics.push = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.springframework.kafka.support.serializer.JsonSerializer

2024-08-02 21:35:57,597 INFO [http-nio-8080-exec-7] org.apache.kafka.common.telemetry.internals.KafkaMetricsCollector$StateLedger: initializing Kafka metrics collector
2024-08-02 21:35:57,606 INFO [http-nio-8080-exec-7] org.apache.kafka.clients.producer.KafkaProducer: [Producer clientId=producer-1] Instantiated an idempotent producer.
2024-08-02 21:35:57,620 INFO [http-nio-8080-exec-7] org.apache.kafka.common.utils.AppInfoParser$AppInfo: Kafka version: 3.7.0
2024-08-02 21:35:57,621 INFO [http-nio-8080-exec-7] org.apache.kafka.common.utils.AppInfoParser$AppInfo: Kafka commitId: 2ae524ed625438c5
2024-08-02 21:35:57,621 INFO [http-nio-8080-exec-7] org.apache.kafka.common.utils.AppInfoParser$AppInfo: Kafka startTimeMs: 1722620157620
2024-08-02 21:35:57,627 INFO [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata: [Producer clientId=producer-1] Cluster ID: ro5ZC2MwSFGcpo-n9miWSA
2024-08-02 21:35:57,638 INFO [http-nio-8080-exec-7] com.example.samokatclient.repositories.session.SessionRepository: Redis get HASH_KEY: Session, key: 16f5d256-9c51-480d-bd50-4b5853df9b52
2024-08-02 21:35:57,655 INFO [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.producer.internals.TransactionManager: [Producer clientId=producer-1] ProducerId set to 0 with epoch 0
2024-08-02 21:35:58,175 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.example.samokatclient.repositories.currentOrder.CurrentOrderClientRepository: Redis hasKey HASH_KEY: CurrentOrderClient, key: 5241454d-a678-4ea3-a450-f785bff41051
2024-08-02 21:35:58,178 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.example.samokatclient.repositories.currentOrder.CurrentOrderClientRepository: Redis put HASH_KEY: CurrentOrderClient, key: 5241454d-a678-4ea3-a450-f785bff41051
2024-08-02 21:36:46,989 INFO [http-nio-8080-exec-9] com.example.samokatclient.repositories.session.SessionRepository: Redis get HASH_KEY: Session, key: 16f5d256-9c51-480d-bd50-4b5853df9b52
2024-08-02 21:36:47,018 INFO [http-nio-8080-exec-9] com.example.samokatclient.repositories.currentOrder.CurrentOrderClientRepository: Redis get by keys[] HASH_KEY: CurrentOrderClient, keys: [5241454d-a678-4ea3-a450-f785bff41051]
2024-08-02 21:37:00,229 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.example.samokatclient.repositories.currentOrder.CurrentOrderClientRepository: Redis hasKey HASH_KEY: CurrentOrderClient, key: 5241454d-a678-4ea3-a450-f785bff41051
2024-08-02 21:37:00,230 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.example.samokatclient.repositories.currentOrder.CurrentOrderClientRepository: Redis delete HASH_KEY: CurrentOrderClient, key: 5241454d-a678-4ea3-a450-f785bff41051
2024-08-02 21:37:04,243 INFO [http-nio-8080-exec-6] com.example.samokatclient.repositories.session.SessionRepository: Redis get HASH_KEY: Session, key: 16f5d256-9c51-480d-bd50-4b5853df9b52
2024-08-02 21:37:04,248 INFO [http-nio-8080-exec-6] com.example.samokatclient.repositories.currentOrder.CurrentOrderClientRepository: Redis get by keys[] HASH_KEY: CurrentOrderClient, keys: [5241454d-a678-4ea3-a450-f785bff41051]
2024-08-02 21:37:04,251 ERROR [http-nio-8080-exec-6] org.apache.juli.logging.DirectJDKLog: Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.NullPointerException: Cannot invoke "com.example.samokatclient.entities.currentOrder.CurrentOrderClient.getId()" because "currentOrderClient" is null] with root cause
java.lang.NullPointerException: Cannot invoke "com.example.samokatclient.entities.currentOrder.CurrentOrderClient.getId()" because "currentOrderClient" is null
	at com.example.samokatclient.mappers.CurrentOrderClientMapper.toDto(CurrentOrderClientMapper.java:18)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:212)
	at java.base/java.util.AbstractList$RandomAccessSpliterator.forEachRemaining(AbstractList.java:722)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:556)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:546)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:622)
	at java.base/java.util.stream.AbstractPipeline.evaluateToArrayNode(AbstractPipeline.java:291)
	at java.base/java.util.stream.ReferencePipeline.toArray(ReferencePipeline.java:631)
	at java.base/java.util.stream.ReferencePipeline.toArray(ReferencePipeline.java:637)
	at java.base/java.util.stream.ReferencePipeline.toList(ReferencePipeline.java:642)
	at com.example.samokatclient.services.CurrentOrderService.getCurrentOrders(CurrentOrderService.java:97)
	at com.example.samokatclient.controllers.CurrentOrderController.getCurrentOrders(CurrentOrderController.java:62)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:107)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1570)
2024-08-02 21:38:18,363 INFO [http-nio-8080-exec-5] com.example.samokatclient.repositories.session.SessionRepository: Redis get HASH_KEY: Session, key: 16f5d256-9c51-480d-bd50-4b5853df9b52
2024-08-02 21:38:18,372 INFO [http-nio-8080-exec-5] com.example.samokatclient.repositories.currentOrder.CurrentOrderClientRepository: Redis get by keys[] HASH_KEY: CurrentOrderClient, keys: [5241454d-a678-4ea3-a450-f785bff41051]
2024-08-02 21:38:18,376 ERROR [http-nio-8080-exec-5] org.apache.juli.logging.DirectJDKLog: Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.NullPointerException: Cannot invoke "com.example.samokatclient.entities.currentOrder.CurrentOrderClient.getId()" because "currentOrderClient" is null] with root cause
java.lang.NullPointerException: Cannot invoke "com.example.samokatclient.entities.currentOrder.CurrentOrderClient.getId()" because "currentOrderClient" is null
	at com.example.samokatclient.mappers.CurrentOrderClientMapper.toDto(CurrentOrderClientMapper.java:18)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:212)
	at java.base/java.util.AbstractList$RandomAccessSpliterator.forEachRemaining(AbstractList.java:722)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:556)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:546)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:622)
	at java.base/java.util.stream.AbstractPipeline.evaluateToArrayNode(AbstractPipeline.java:291)
	at java.base/java.util.stream.ReferencePipeline.toArray(ReferencePipeline.java:631)
	at java.base/java.util.stream.ReferencePipeline.toArray(ReferencePipeline.java:637)
	at java.base/java.util.stream.ReferencePipeline.toList(ReferencePipeline.java:642)
	at com.example.samokatclient.services.CurrentOrderService.getCurrentOrders(CurrentOrderService.java:97)
	at com.example.samokatclient.controllers.CurrentOrderController.getCurrentOrders(CurrentOrderController.java:62)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:107)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1570)
2024-08-02 21:41:17,849 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.AbstractCoordinator: [Consumer clientId=consumer-newStatusGroupId-1, groupId=newStatusGroupId] Request joining group due to: group is already rebalancing
2024-08-02 21:41:17,851 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerRebalanceListenerInvoker: [Consumer clientId=consumer-newStatusGroupId-1, groupId=newStatusGroupId] Revoke previously assigned partitions newStatus-0
2024-08-02 21:41:17,852 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: newStatusGroupId: partitions revoked: [newStatus-0]
2024-08-02 21:41:17,852 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.AbstractCoordinator: [Consumer clientId=consumer-newStatusGroupId-1, groupId=newStatusGroupId] (Re-)joining group
2024-08-02 21:41:17,855 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.AbstractCoordinator$JoinGroupResponseHandler: [Consumer clientId=consumer-newStatusGroupId-1, groupId=newStatusGroupId] Successfully joined group with generation Generation{generationId=13, memberId='consumer-newStatusGroupId-1-61844c0d-2b04-47a8-b661-f695fbdfe466', protocol='range'}
2024-08-02 21:41:17,859 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator: [Consumer clientId=consumer-newStatusGroupId-1, groupId=newStatusGroupId] Finished assignment for group at generation 13: {consumer-newStatusGroupId-1-61844c0d-2b04-47a8-b661-f695fbdfe466=Assignment(partitions=[newStatus-0])}
2024-08-02 21:41:17,863 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.AbstractCoordinator$SyncGroupResponseHandler: [Consumer clientId=consumer-newStatusGroupId-1, groupId=newStatusGroupId] Successfully synced group in generation Generation{generationId=13, memberId='consumer-newStatusGroupId-1-61844c0d-2b04-47a8-b661-f695fbdfe466', protocol='range'}
2024-08-02 21:41:17,863 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator: [Consumer clientId=consumer-newStatusGroupId-1, groupId=newStatusGroupId] Notifying assignor about the new Assignment(partitions=[newStatus-0])
2024-08-02 21:41:17,863 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerRebalanceListenerInvoker: [Consumer clientId=consumer-newStatusGroupId-1, groupId=newStatusGroupId] Adding newly assigned partitions: newStatus-0
2024-08-02 21:41:17,867 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerUtils: Setting offset for partition newStatus-0 to the committed offset FetchPosition{offset=2, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}
2024-08-02 21:41:17,867 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: newStatusGroupId: partitions assigned: [newStatus-0]
2024-08-02 21:41:38,739 INFO [http-nio-8080-exec-7] com.example.samokatclient.repositories.session.SessionRepository: Redis get HASH_KEY: Session, key: 16f5d256-9c51-480d-bd50-4b5853df9b52
2024-08-02 21:42:54,817 INFO [http-nio-8080-exec-9] com.example.samokatclient.repositories.session.SessionRepository: Redis get HASH_KEY: Session, key: 16f5d256-9c51-480d-bd50-4b5853df9b52
2024-08-02 21:43:01,668 INFO [http-nio-8080-exec-10] com.example.samokatclient.repositories.session.SessionRepository: Redis get HASH_KEY: Session, key: 16f5d256-9c51-480d-bd50-4b5853df9b52
2024-08-02 21:43:05,781 INFO [http-nio-8080-exec-1] com.example.samokatclient.repositories.session.SessionRepository: Redis get HASH_KEY: Session, key: 16f5d256-9c51-480d-bd50-4b5853df9b52
2024-08-02 21:43:35,563 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerRebalanceListenerInvoker: [Consumer clientId=consumer-newStatusGroupId-1, groupId=newStatusGroupId] Revoke previously assigned partitions newStatus-0
2024-08-02 21:43:35,563 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: newStatusGroupId: partitions revoked: [newStatus-0]
2024-08-02 21:43:35,563 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.AbstractCoordinator: [Consumer clientId=consumer-newStatusGroupId-1, groupId=newStatusGroupId] Member consumer-newStatusGroupId-1-61844c0d-2b04-47a8-b661-f695fbdfe466 sending LeaveGroup request to coordinator localhost:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics
2024-08-02 21:43:35,563 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.AbstractCoordinator: [Consumer clientId=consumer-newStatusGroupId-1, groupId=newStatusGroupId] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-08-02 21:43:35,563 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.AbstractCoordinator: [Consumer clientId=consumer-newStatusGroupId-1, groupId=newStatusGroupId] Request joining group due to: consumer pro-actively leaving the group
2024-08-02 21:43:35,563 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.LegacyKafkaConsumer: [Consumer clientId=consumer-newStatusGroupId-1, groupId=newStatusGroupId] Unsubscribed all topics or patterns and assigned partitions
2024-08-02 21:43:35,565 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.AbstractCoordinator: [Consumer clientId=consumer-newStatusGroupId-1, groupId=newStatusGroupId] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-08-02 21:43:35,565 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.AbstractCoordinator: [Consumer clientId=consumer-newStatusGroupId-1, groupId=newStatusGroupId] Request joining group due to: consumer pro-actively leaving the group
2024-08-02 21:43:35,783 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics: Metrics scheduler closed
2024-08-02 21:43:35,783 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics: Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-08-02 21:43:35,784 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics: Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2024-08-02 21:43:35,784 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics: Metrics reporters closed
2024-08-02 21:43:35,788 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.utils.AppInfoParser: App info kafka.consumer for consumer-newStatusGroupId-1 unregistered
2024-08-02 21:43:35,789 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.core.log.LogAccessor: newStatusGroupId: Consumer stopped
2024-08-02 21:43:35,915 INFO [SpringApplicationShutdownHook] org.apache.kafka.clients.producer.KafkaProducer: [Producer clientId=producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
2024-08-02 21:43:35,919 INFO [SpringApplicationShutdownHook] org.apache.kafka.common.metrics.Metrics: Metrics scheduler closed
2024-08-02 21:43:35,919 INFO [SpringApplicationShutdownHook] org.apache.kafka.common.metrics.Metrics: Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-08-02 21:43:35,919 INFO [SpringApplicationShutdownHook] org.apache.kafka.common.metrics.Metrics: Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2024-08-02 21:43:35,920 INFO [SpringApplicationShutdownHook] org.apache.kafka.common.metrics.Metrics: Metrics reporters closed
2024-08-02 21:43:35,920 INFO [SpringApplicationShutdownHook] org.apache.kafka.common.utils.AppInfoParser: App info kafka.producer for producer-1 unregistered
2024-08-02 21:43:35,933 INFO [SpringApplicationShutdownHook] org.springframework.orm.jpa.AbstractEntityManagerFactoryBean: Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-02 21:43:35,934 INFO [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource: HikariPool-1 - Shutdown initiated...
2024-08-02 21:43:35,938 INFO [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource: HikariPool-1 - Shutdown completed.
